// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuditItemScreen Manage AuditItem externalized function tests Snapshot test for update pallet qty modal 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ffffffff",
            "borderRadius": 7.5,
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingHorizontal": 8,
            "width": "80%",
          },
          Object {
            "minHeight": undefined,
          },
        ]
      }
    >
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      />
      <View>
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingVertical": 8,
              "textAlign": "center",
            }
          }
        >
          [missing "en.AUDITS.PALLET_COUNT" translation] 4988
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 10,
              "borderWidth": 1,
              "flexDirection": "row",
            },
            Object {
              "borderColor": "#e0e0e0",
            },
          ]
        }
        testID="numericSelector"
      >
        <View
          style={
            Array [
              Object {
                "height": 15,
                "width": 35,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#00000000",
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="decreaseButton"
            >
              <mockMaterialCommunityIcons
                color="#BABBBE"
                name="minus"
                size={18}
              />
            </View>
          </View>
        </View>
        <TextInput
          keyboardType="numeric"
          onChangeText={[Function]}
          onEndEditing={[Function]}
          style={
            Object {
              "color": "#0071e9",
              "height": 40,
              "minWidth": "15%",
              "textAlign": "center",
            }
          }
          testID="numericTextInput"
          value="0"
        />
        <View
          style={
            Array [
              Object {
                "height": 15,
                "width": 35,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#00000000",
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="increaseButton"
            >
              <mockMaterialCommunityIcons
                color="#0071e9"
                name="plus"
                size={18}
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-around",
            "paddingVertical": 8,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "paddingHorizontal": 8,
                "width": "50%",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "borderColor": "#0071e9",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="cancelButton"
            >
              <Text
                style={
                  Object {
                    "color": "#0071e9",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.CANCEL" translation]
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "paddingHorizontal": 8,
                "width": "50%",
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0071e9",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="confirmButton"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.APPROVAL.CONFIRM" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderCancelApprovalModal with isWaiting false 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderRadius": 7.5,
            "justifyContent": "space-between",
            "paddingVertical": 15,
            "width": "75%",
          },
          Object {
            "minHeight": 100,
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.ITEM.CANCEL_APPROVAL" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "flex": 1,
                "paddingHorizontal": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0071e9",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="modal-cancel-button"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.CANCEL" translation]
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "flex": 1,
                "paddingHorizontal": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#D6512D",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="modal-confirm-button"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.OK" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderConfirmOnHandsModal should render loader 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderRadius": 7.5,
            "justifyContent": "space-between",
            "paddingVertical": 15,
            "width": "75%",
          },
          Object {
            "minHeight": 150,
          },
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#0071e9"
        hidesWhenStopped={true}
        size="large"
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      />
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderConfirmOnHandsModal with isWaiting true 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderRadius": 7.5,
            "justifyContent": "space-between",
            "paddingVertical": 15,
            "width": "75%",
          },
          Object {
            "minHeight": 100,
          },
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#0071e9"
        hidesWhenStopped={true}
        size="large"
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      />
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderConfirmOnHandsModal with itemDetails onHandsQty 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderRadius": 7.5,
            "justifyContent": "space-between",
            "paddingVertical": 15,
            "width": "75%",
          },
          Object {
            "minHeight": 150,
          },
        ]
      }
    >
      <mockMaterialCommunityIcons
        color="#e74517"
        name="alert"
        size={40}
      />
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        [missing "en.AUDITS.CONFIRM_AUDIT" translation]
      </Text>
      <Text>
        [missing "en.AUDITS.LARGE_CURRENCY_CHANGE" translation]
      </Text>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.APPROVAL.CURRENT_QUANTITY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          42
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#33691E",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          <mockMaterialCommunityIcons
            name="arrow-up-bold"
            size={16}
          />
          $12,002.40
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#33691E",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          8
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "marginBottom": 5,
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.AUDITS.UPDATED_QTY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          50
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "flex": 1,
                "paddingHorizontal": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "borderColor": "#0071e9",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="modal-cancel-button"
            >
              <Text
                style={
                  Object {
                    "color": "#0071e9",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.APPROVAL.GO_BACK" translation]
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "flex": 1,
                "paddingHorizontal": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0071e9",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="modal-confirm-button"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.SUBMIT" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderDeleteLocationModal should render modal with loader 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderColor": "#545F7A",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "justifyContent": "center",
            "padding": 10,
            "width": "80%",
          },
          Object {
            "minHeight": 100,
          },
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#0071e9"
        hidesWhenStopped={true}
        size="large"
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      />
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderDeleteLocationModal should render modal with loader 2`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderColor": "#545F7A",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "justifyContent": "center",
            "padding": 10,
            "width": "80%",
          },
          Object {
            "minHeight": 100,
          },
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#0071e9"
        hidesWhenStopped={true}
        size="large"
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      />
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests Tests renderDeleteLocationModal should render modal with locationName and action buttons 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderColor": "#545F7A",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "justifyContent": "center",
            "padding": 10,
            "width": "80%",
          },
          Object {
            "minHeight": 100,
          },
        ]
      }
    >
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.LOCATION.DELETE_CONFIRMATION" translation]A1-1
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "flex": 1,
                "paddingHorizontal": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0071e9",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="modal-cancel-button"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.CANCEL" translation]
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              Object {
                "flex": 1,
                "paddingHorizontal": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#D6512D",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="modal-confirm-button"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.OK" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests test isError 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#e57373"
      name="alert"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.API_ERROR" translation]
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e57373",
          "borderRadius": 4,
          "height": 40,
          "justifyContent": "center",
          "marginVertical": 10,
          "opacity": 1,
          "width": "95%",
        }
      }
      testID="errorLoadingItemRetry"
    >
      <Text>
        [missing "en.GENERICS.RETRY" translation]
      </Text>
    </View>
  </View>
</View>
`;

exports[`AuditItemScreen Manage AuditItem externalized function tests test isError 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#e57373"
      name="alert"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.API_ERROR" translation]
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e57373",
          "borderRadius": 4,
          "height": 40,
          "justifyContent": "center",
          "marginVertical": 10,
          "opacity": 1,
          "width": "95%",
        }
      }
      testID="errorLoadingItemRetry"
    >
      <Text>
        [missing "en.GENERICS.RETRY" translation]
      </Text>
    </View>
  </View>
</View>
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses render screen with redux 1`] = `
Array [
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />,
  <View
    style={
      Object {
        "marginBottom": 8,
      }
    }
  >
    <View
      style={
        Object {
          "marginTop": 2,
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          Object {
            "disabled": true,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#ffffffff",
            "flexDirection": "row",
            "opacity": 1,
            "padding": 5,
            "paddingLeft": 10,
            "width": "100%",
          }
        }
        testID="itemCard"
      >
        <View
          style={
            Object {
              "flexDirection": "column",
              "flexShrink": 1,
              "justifyContent": "space-around",
              "padding": 5,
            }
          }
          testID="item-details"
        >
          <View
            style={
              Object {
                "paddingBottom": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#616161",
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontSize": 12,
                }
              }
            >
              [missing "en.GENERICS.ITEM" translation] 0
            </Text>
          </View>
          <View>
            <Text
              style={
                Object {
                  "flexShrink": 1,
                  "flexWrap": "wrap",
                  "fontSize": 14,
                  "marginVertical": 2,
                }
              }
            >
              
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "column",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#616161",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontSize": 12,
                  }
                }
              >
                [missing "en.ITEM.ON_HANDS" translation] 0
              </Text>
              <Text
                style={
                  Object {
                    "color": "#616161",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontSize": 12,
                  }
                }
              >
                 (-999)
              </Text>
              <Text
                style={
                  Object {
                    "color": "#616161",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontSize": 12,
                  }
                }
              >
                [missing "en.AUDITS.CURRENT_TOTAL" translation] 0
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "width": "100%",
                }
              }
            >
              <Text
                allowFontScaling={false}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#e74517",
                      "fontSize": 12,
                    },
                    Object {
                      "paddingRight": 6,
                      "paddingTop": 2,
                    },
                    Object {
                      "fontFamily": "FontAwesome5Free-Solid",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {
                      "fontWeight": "900",
                    },
                  ]
                }
              >
                
              </Text>
              <Text
                style={
                  Object {
                    "color": "#616161",
                    "flexShrink": 1,
                    "flexWrap": "wrap",
                    "fontSize": 12,
                  }
                }
              >
                [missing "en.ITEM.PENDING_MGR_APPROVAL" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <RCTScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    nestedScrollEnabled={true}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "stretch",
            "justifyContent": "center",
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 6,
            }
          }
        >
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "borderBottomWidth": 1,
                  "borderColor": "#e0e0e0",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingHorizontal": 15,
                  "paddingVertical": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View>
                  <mockMaterialCommunityIcons
                    color="#000000"
                    name="map-marker-outline"
                    size={25}
                  />
                </View>
                <View>
                  <Text
                    style={
                      Object {
                        "fontWeight": "bold",
                      }
                    }
                  >
                    [missing "en.LOCATION.FLOOR" translation] (0)
                  </Text>
                  <Text
                    style={
                      Object {
                        "fontSize": 12,
                      }
                    }
                  >
                    [missing "en.AUDITS.VALIDATE_QUANTITY" translation]
                  </Text>
                </View>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 10,
                    "left": 15,
                    "right": 15,
                    "top": 10,
                  }
                }
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID="add-location"
              >
                <mockMaterialCommunityIcons
                  color="#0071e9"
                  name="plus-thick"
                  size={25}
                />
              </View>
            </View>
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffffff",
                    "justifyContent": "center",
                    "marginBottom": 2,
                    "padding": 5,
                  }
                }
              >
                <Text>
                  [missing "en.AUDITS.NO_LOCATION_AVAILABLE" translation]
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "marginBottom": 6,
            }
          }
        >
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "borderBottomWidth": 1,
                  "borderColor": "#e0e0e0",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingHorizontal": 15,
                  "paddingVertical": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                  }
                }
              >
                <View>
                  <mockMaterialCommunityIcons
                    color="#000000"
                    name="map-marker-outline"
                    size={25}
                  />
                </View>
                <View>
                  <Text
                    style={
                      Object {
                        "fontWeight": "bold",
                      }
                    }
                  >
                    [missing "en.LOCATION.RESERVE" translation] (0)
                  </Text>
                  <Text
                    style={
                      Object {
                        "fontSize": 12,
                      }
                    }
                  >
                    [missing "en.AUDITS.VALIDATE_SCAN_QUANTITY_WHEN_SCAN_DISABLED" translation]
                  </Text>
                </View>
              </View>
            </View>
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffffff",
                    "justifyContent": "center",
                    "marginBottom": 2,
                    "padding": 5,
                  }
                }
              >
                <Text>
                  [missing "en.AUDITS.NO_PALLETS_FOUND_FOR_ITEM" translation]
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View>
          <View>
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffffff",
                    "borderBottomColor": "#eeeeee",
                    "borderBottomWidth": 1,
                    "flexDirection": "row",
                    "paddingHorizontal": 10,
                    "paddingVertical": 10,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "flexDirection": "row",
                      "justifyContent": "flex-start",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "marginRight": 0,
                      }
                    }
                  >
                    
                  </Text>
                  <Text
                    style={
                      Object {
                        "fontWeight": "500",
                        "paddingLeft": 10,
                      }
                    }
                  >
                    [missing "en.AUDITS.OTHER_ON_HANDS" translation] (0)
                  </Text>
                </View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flex": 0.1,
                      "opacity": 1,
                      "paddingLeft": 5,
                    }
                  }
                  testID="collapsible-card"
                >
                  <mockMaterialIcons
                    color="#000000"
                    name="keyboard-arrow-up"
                    size={25}
                  />
                </View>
              </View>
              <View>
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffffff",
                      "flexDirection": "row",
                      "justifyContent": "space-evenly",
                    }
                  }
                >
                  <View />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>,
  <View
    style={
      Object {
        "borderTopColor": "#eeeeee",
        "borderTopWidth": 4,
        "height": 60,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffffff",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "paddingHorizontal": 10,
          "paddingVertical": 5,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "height": 45,
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0071e9",
                  "borderRadius": 5,
                  "elevation": 1,
                  "flex": 1,
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID="btnContinue"
            >
              <Text
                style={
                  Object {
                    "color": "#ffffffff",
                    "fontFamily": "Roboto-Medium",
                    "fontSize": 16,
                    "fontWeight": "normal",
                    "textAlign": undefined,
                  }
                }
              >
                [missing "en.GENERICS.CONTINUE" translation]
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
]
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses renders 'Activity Indicator' waiting for ItemDetails Response  1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PalletQtyUpdate
      handleClose={[Function]}
      handleSubmit={[Function]}
      palletId={4928}
      qty={0}
      showCalculator={false}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.ITEM.CANCEL_APPROVAL" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={150}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        [missing "en.AUDITS.CONFIRM_AUDIT" translation]
      </Text>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.APPROVAL.CURRENT_QUANTITY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          0
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#ab2703",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          <mockMaterialCommunityIcons
            name="arrow-down-bold"
            size={16}
          />
          $0.00
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#ab2703",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          0
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "marginBottom": 5,
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.AUDITS.UPDATED_QTY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          0
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.APPROVAL.GO_BACK\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={true}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.SUBMIT\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CalculatorModal
    disableAcceptButton={[Function]}
    onAccept={[Function]}
    onClose={[Function]}
    showAcceptButton={true}
    visible={false}
  />
  <View
    style={
      Object {
        "marginBottom": 8,
      }
    }
  >
    <ItemCard
      OHItemInfo={
        Object {
          "claimsOH": 0,
          "consolidatorOH": 0,
          "flyCloudInTransitOH": 0,
          "flyCloudOH": 0,
          "salesFloorOH": 0,
        }
      }
      countryCode="CN"
      description=""
      disabled={true}
      itemNumber={0}
      loading={true}
      onClick={[Function]}
      onHandQty={0}
      pendingQty={-999}
      showItemImage={false}
      showOHItems={false}
      totalQty={0}
    />
  </View>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    nestedScrollEnabled={true}
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          add={[Function]}
          error={false}
          loading={true}
          locationList={Array []}
          locationType="floor"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          error={false}
          loading={false}
          locationList={Array []}
          locationType="reserve"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View>
        <OtherOHItemCard
          claimsOH={0}
          collapsed={false}
          consolidatorOH={0}
          countryCode="CN"
          flyCloudInTransitOH={0}
          flyCloudOH={0}
          loading={true}
        />
      </View>
    </View>
  </ScrollView>
  <View
    style={
      Object {
        "borderTopColor": "#eeeeee",
        "borderTopWidth": 4,
        "height": 60,
      }
    }
  >
    <AuditScreenFooter
      disabledContinue={true}
      onContinueClick={[Function]}
    />
  </View>
</React.Fragment>
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses renders 'Activity Indicator' waiting for completeItemApi Response  1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses renders 'Scanned Item Not Found' on request status 204 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#5FA7F2"
      name="information"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.PALLET.ITEMS_NOT_FOUND" translation]
    </Text>
  </View>
</View>
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses renders screen with positive pending qty and showing cancel approval dialog 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PalletQtyUpdate
      handleClose={[Function]}
      handleSubmit={[Function]}
      palletId={4928}
      qty={0}
      showCalculator={false}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    minHeight={100}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.ITEM.CANCEL_APPROVAL" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={150}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <mockMaterialCommunityIcons
        color="#e74517"
        name="alert"
        size={40}
      />
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        [missing "en.AUDITS.CONFIRM_AUDIT" translation]
      </Text>
      <Text>
        [missing "en.AUDITS.LARGE_CURRENCY_CHANGE" translation]
      </Text>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.APPROVAL.CURRENT_QUANTITY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          35
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#33691E",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          <mockMaterialCommunityIcons
            name="arrow-up-bold"
            size={16}
          />
          $10,502.10
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#33691E",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          7
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "marginBottom": 5,
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.AUDITS.UPDATED_QTY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          42
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.APPROVAL.GO_BACK\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.SUBMIT\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CalculatorModal
    disableAcceptButton={[Function]}
    onAccept={[Function]}
    onClose={[Function]}
    showAcceptButton={true}
    visible={false}
  />
  <View
    style={
      Object {
        "marginBottom": 8,
      }
    }
  >
    <ItemCard
      OHItemInfo={
        Object {
          "claimsOH": 0,
          "consolidatorOH": 0,
          "flyCloudInTransitOH": 0,
          "flyCloudOH": 0,
          "salesFloorOH": 0,
        }
      }
      countryCode="CN"
      description="Wine Item"
      disabled={true}
      itemNumber={987654321}
      loading={false}
      onClick={[Function]}
      onHandQty={42}
      pendingQty={35}
      showItemImage={false}
      showOHItems={false}
      totalQty={42}
    />
  </View>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    nestedScrollEnabled={true}
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          add={[Function]}
          error={false}
          loading={false}
          locationList={Array []}
          locationType="floor"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          error={false}
          loading={false}
          locationList={Array []}
          locationType="reserve"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View>
        <OtherOHItemCard
          claimsOH={0}
          collapsed={false}
          consolidatorOH={0}
          countryCode="CN"
          flyCloudInTransitOH={0}
          flyCloudOH={42}
          loading={false}
        />
      </View>
    </View>
  </ScrollView>
  <View
    style={
      Object {
        "borderTopColor": "#eeeeee",
        "borderTopWidth": 4,
        "height": 60,
      }
    }
  >
    <AuditScreenFooter
      disabledContinue={false}
      onContinueClick={[Function]}
    />
  </View>
</React.Fragment>
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses renders the details for a single item with non-null status 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PalletQtyUpdate
      handleClose={[Function]}
      handleSubmit={[Function]}
      palletId={4928}
      qty={0}
      showCalculator={false}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.ITEM.CANCEL_APPROVAL" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={150}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <mockMaterialCommunityIcons
        color="#e74517"
        name="alert"
        size={40}
      />
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        [missing "en.AUDITS.CONFIRM_AUDIT" translation]
      </Text>
      <Text>
        [missing "en.AUDITS.LARGE_CURRENCY_CHANGE" translation]
      </Text>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.APPROVAL.CURRENT_QUANTITY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          42
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#ab2703",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          <mockMaterialCommunityIcons
            name="arrow-down-bold"
            size={16}
          />
          -$40,508.10
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#ab2703",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          -27
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "marginBottom": 5,
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.AUDITS.UPDATED_QTY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          15
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.APPROVAL.GO_BACK\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.SUBMIT\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CalculatorModal
    disableAcceptButton={[Function]}
    onAccept={[Function]}
    onClose={[Function]}
    showAcceptButton={true}
    visible={false}
  />
  <View
    style={
      Object {
        "marginBottom": 8,
      }
    }
  >
    <ItemCard
      OHItemInfo={
        Object {
          "claimsOH": 0,
          "consolidatorOH": 0,
          "flyCloudInTransitOH": 0,
          "flyCloudOH": 0,
          "salesFloorOH": 0,
        }
      }
      countryCode="CN"
      description="Test Item That is Really, Really Long (and has parenthesis)"
      disabled={true}
      itemNumber={1234567890}
      loading={false}
      onClick={[Function]}
      onHandQty={42}
      pendingQty={-999}
      showItemImage={false}
      showOHItems={false}
      totalQty={15}
    />
  </View>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    nestedScrollEnabled={true}
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          add={[Function]}
          error={false}
          loading={false}
          locationList={Array []}
          locationType="floor"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          error={false}
          loading={false}
          locationList={Array []}
          locationType="reserve"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View>
        <OtherOHItemCard
          claimsOH={5}
          collapsed={false}
          consolidatorOH={10}
          countryCode="CN"
          flyCloudInTransitOH={0}
          flyCloudOH={0}
          loading={false}
        />
      </View>
    </View>
  </ScrollView>
  <View
    style={
      Object {
        "borderTopColor": "#eeeeee",
        "borderTopWidth": 4,
        "height": 60,
      }
    }
  >
    <AuditScreenFooter
      disabledContinue={false}
      onContinueClick={[Function]}
    />
  </View>
</React.Fragment>
`;

exports[`AuditItemScreen Tests renders ItemDetails API Responses renders the details for a single item with non-null status and positive pending qty 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PalletQtyUpdate
      handleClose={[Function]}
      handleSubmit={[Function]}
      palletId={4928}
      qty={0}
      showCalculator={false}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.ITEM.CANCEL_APPROVAL" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={100}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <Text
        style={
          Object {
            "fontSize": 18,
            "padding": 15,
            "textAlign": "center",
          }
        }
      />
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    minHeight={150}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <mockMaterialCommunityIcons
        color="#e74517"
        name="alert"
        size={40}
      />
      <Text
        style={
          Object {
            "fontSize": 16,
            "fontWeight": "bold",
          }
        }
      >
        [missing "en.AUDITS.CONFIRM_AUDIT" translation]
      </Text>
      <Text>
        [missing "en.AUDITS.LARGE_CURRENCY_CHANGE" translation]
      </Text>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.APPROVAL.CURRENT_QUANTITY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          35
        </Text>
      </View>
      <View
        style={
          Object {
            "borderBottomColor": "#9e9e9e",
            "borderBottomWidth": 1,
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#33691E",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          <mockMaterialCommunityIcons
            name="arrow-up-bold"
            size={16}
          />
          $10,502.10
        </Text>
        <Text
          style={
            Object {
              "alignSelf": "flex-start",
              "color": "#33691E",
              "fontSize": 15,
              "marginLeft": 30,
            }
          }
        >
          7
        </Text>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "marginBottom": 5,
            "paddingVertical": 5,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "flex": 1,
            }
          }
        >
          [missing "en.AUDITS.UPDATED_QTY" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 15,
            }
          }
        >
          42
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "space-evenly",
            "paddingTop": 10,
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-cancel-button"
          title="[missing \\"en.APPROVAL.GO_BACK\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          testID="modal-confirm-button"
          title="[missing \\"en.GENERICS.SUBMIT\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <CalculatorModal
    disableAcceptButton={[Function]}
    onAccept={[Function]}
    onClose={[Function]}
    showAcceptButton={true}
    visible={false}
  />
  <View
    style={
      Object {
        "marginBottom": 8,
      }
    }
  >
    <ItemCard
      OHItemInfo={
        Object {
          "claimsOH": 0,
          "consolidatorOH": 0,
          "flyCloudInTransitOH": 0,
          "flyCloudOH": 0,
          "salesFloorOH": 0,
        }
      }
      countryCode="CN"
      description="Wine Item"
      disabled={true}
      itemNumber={987654321}
      loading={false}
      onClick={[Function]}
      onHandQty={42}
      pendingQty={35}
      showItemImage={false}
      showOHItems={false}
      totalQty={42}
    />
  </View>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    nestedScrollEnabled={true}
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          add={[Function]}
          error={false}
          loading={false}
          locationList={Array []}
          locationType="floor"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View
        style={
          Object {
            "marginBottom": 6,
          }
        }
      >
        <LocationListCard
          error={false}
          loading={false}
          locationList={Array []}
          locationType="reserve"
          maxQty={9999}
          minQty={0}
          onRetry={[Function]}
          scanRequired={false}
          showCalculator={false}
        />
      </View>
      <View>
        <OtherOHItemCard
          claimsOH={0}
          collapsed={false}
          consolidatorOH={0}
          countryCode="CN"
          flyCloudInTransitOH={0}
          flyCloudOH={42}
          loading={false}
        />
      </View>
    </View>
  </ScrollView>
  <View
    style={
      Object {
        "borderTopColor": "#eeeeee",
        "borderTopWidth": 4,
        "height": 60,
      }
    }
  >
    <AuditScreenFooter
      disabledContinue={false}
      onContinueClick={[Function]}
    />
  </View>
</React.Fragment>
`;
