// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests rendering PalletWorklist screen Renders the PalletWorklist screen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "width": "100%",
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="FormHeader"
    onClose={[Function]}
  >
    <View
      style={
        Object {
          "backgroundColor": "#0071e9",
          "borderBottomWidth": 1,
          "borderTopLeftRadius": 8,
          "borderTopRightRadius": 8,
          "justifyContent": "flex-start",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#ffffffff",
            "fontSize": 18,
            "padding": 10,
          }
        }
      >
        [missing "en.MISSING_PALLET_WORKLIST.DELETE_PALLET" translation]
      </Text>
    </View>
    <Text
      style={
        Object {
          "fontSize": 16,
          "paddingHorizontal": 10,
          "paddingVertical": 20,
          "textAlign": "center",
        }
      }
    >
      [missing "en.MISSING_PALLET_WORKLIST.DELETE_PALLET_CONFIRMATION" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 10,
          }
        }
        title="[missing \\"en.GENERICS.CANCEL\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 10,
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <SortBar
    isGrouped={false}
    updateGroupToggle={[Function]}
  />
  <FlatList
    data={
      Array [
        Object {
          "completed": false,
          "createTs": "",
          "createUserId": "",
          "itemCount": 2,
          "lastKnownPalletLocationId": -1,
          "lastKnownPalletLocationName": "[missing \\"en.WORKLIST.ALL\\" translation]",
          "palletDeleted": false,
          "palletId": 0,
          "sectionID": 0,
        },
        Object {
          "completed": false,
          "completedTs": undefined,
          "completedUserId": undefined,
          "createTs": "26/06/2022",
          "createUserId": "11",
          "lastKnownPalletLocationId": 1,
          "lastKnownPalletLocationName": "A1-1",
          "palletDeleted": false,
          "palletId": 7988,
          "sectionID": 1,
        },
        Object {
          "completed": false,
          "completedTs": undefined,
          "completedUserId": undefined,
          "createTs": "26/06/2022",
          "createUserId": "12",
          "lastKnownPalletLocationId": 2,
          "lastKnownPalletLocationName": "A1-2",
          "palletDeleted": false,
          "palletId": 7989,
          "sectionID": 2,
        },
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[MockFunction]}
    refreshing={false}
    renderItem={[Function]}
    style={
      Object {
        "flex": 1,
        "width": "100%",
      }
    }
  />
</View>
`;

exports[`Tests rendering PalletWorklist screen Renders the PalletWorklist screen when refreshing prop is true 1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`Tests rendering PalletWorklist screen Renders the PalletWorklist screen when the backend service encouters an error 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "flex-start",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="error"
    size={60}
  />
  <Text
    style={
      Object {
        "marginVertical": 10,
        "textAlign": "center",
      }
    }
  >
    [missing "en.WORKLIST.WORKLIST_ITEM_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[MockFunction]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;
