// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickBin Workflow render tests ContinueActionDialog render tests renders dialog with different coninue actions for the selected picks 1`] = `
<CustomModalComponent
  animationType="none"
  isVisible={true}
  modalType="Popup"
  onClose={[Function]}
>
  <React.Fragment>
    <View
      style={
        Object {
          "margin": 5,
        }
      }
    >
      <Text>
        [missing "en.PICKING.SELECT_CONTINUE_ACTION" translation]
      </Text>
    </View>
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "column",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "margin": 10,
          }
        }
        title="[missing \\"en.PICKING.READY_TO_WORK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "margin": 10,
          }
        }
        title="[missing \\"en.PICKING.COMPLETE\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "margin": 10,
          }
        }
        title="[missing \\"en.PICKING.PALLET_NOT_FOUND\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "margin": 10,
          }
        }
        title="[missing \\"en.GENERICS.CANCEL\\" translation]"
        titleColor="#0071e9"
        titleFontSize={16}
        titleFontWeight="normal"
        type={2}
        width={-1}
      />
    </View>
  </React.Fragment>
</CustomModalComponent>
`;

exports[`PickBin Workflow render tests renders screen with accepted bin & current user 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "vn50pz4",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 6,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "45",
          "palletLocationId": 5,
          "palletLocationName": "ABAR1-4",
          "quickPick": true,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "accepted bin",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="45"
      palletLocation="ABAR1-4"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "vn50pz4",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 6,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "45",
            "palletLocationId": 5,
            "palletLocationName": "ABAR1-4",
            "quickPick": true,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "accepted bin",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="accepted bin"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.RELEASE\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.BIN\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with accepted bin & not current user 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "t0s0og",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 0,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "43",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "accepted bin",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="43"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "t0s0og",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 0,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "43",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "accepted bin",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="accepted bin"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    />
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with accepted bin, not current user, and manager 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "t0s0og",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 0,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "43",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "accepted bin",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="43"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "t0s0og",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 0,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "43",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "accepted bin",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="accepted bin"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.RELEASE\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with accepted pick & current user 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "vn50pz4",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 5,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "44",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": true,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "accepted pick",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="44"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "vn50pz4",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 5,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "44",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": true,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "accepted pick",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="accepted pick"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.RELEASE\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.GENERICS.CONTINUE\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with accepted pick and not current user 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "t0s0og",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 1,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "40",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "accepted pick",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="40"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "t0s0og",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 1,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "40",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "accepted pick",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="accepted pick"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    />
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with accepted pick, not current user, and manager 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "t0s0og",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 1,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "40",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "accepted pick",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="40"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "t0s0og",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 1,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "40",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "accepted pick",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="accepted pick"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.RELEASE\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with ready to bin items selected 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 3,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "42",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "ready to bin",
          "upcNbr": "1234567890123",
        },
        Object {
          "assignedAssociate": "",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 4,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "42",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "ready to bin",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="42"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 3,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "42",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "ready to bin",
            "upcNbr": "1234567890123",
          },
          Object {
            "assignedAssociate": "",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 4,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "42",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "ready to bin",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="ready to bin"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.ACCEPT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </React.Fragment>
</RNCSafeAreaView>
`;

exports[`PickBin Workflow render tests renders screen with ready to pick item selected 1`] = `
<RNCSafeAreaView
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <ContinueActionDialog
    dispatch={[Function]}
    items={
      Array [
        Object {
          "assignedAssociate": "",
          "category": 3,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Guude",
          "id": 2,
          "itemDesc": "generic description",
          "itemNbr": 1,
          "moveToFront": false,
          "palletId": "41",
          "palletLocationId": 4,
          "palletLocationName": "ABAR1-2",
          "quickPick": false,
          "salesFloorLocationId": 5,
          "salesFloorLocationName": "ABAR1-3",
          "status": "ready to pick",
          "upcNbr": "1234567890123",
        },
      ]
    }
    setSelectedPicklistAction={[MockFunction]}
    setShowContinueActionDialog={[Function]}
    showContinueActionDialog={false}
    trackEventCall={[MockFunction]}
    userConfigs={
      Object {
        "areas": Array [
          Object {
            "area": "CENTER",
            "categories": Array [
              5,
              7,
              9,
              11,
              16,
            ],
          },
          Object {
            "area": "GM",
            "categories": Array [
              23,
              24,
              28,
              31,
            ],
          },
          Object {
            "area": "Fresh",
            "categories": Array [
              41,
              42,
              43,
              45,
              47,
              48,
            ],
          },
        ],
        "auditWorklists": false,
        "backupCategories": "",
        "binning": false,
        "createPallet": false,
        "enableAreaFilter": false,
        "inProgress": false,
        "locationManagement": false,
        "locationManagementEdit": false,
        "manualNoAction": false,
        "multiBin": false,
        "multiPick": false,
        "overridePalletPerishables": false,
        "palletExpiration": false,
        "palletManagement": false,
        "palletWorklists": false,
        "peteGetLocations": false,
        "peteGetPallets": false,
        "picking": false,
        "printingUpdate": false,
        "reserveAdjustment": false,
        "scanRequired": false,
        "settingsTool": false,
        "showCalculator": false,
        "showFeedback": false,
        "showItemImage": false,
        "showOpenAuditLink": false,
        "showRollOverAudit": false,
      }
    }
  />
  <React.Fragment>
    <PickPalletInfoCard
      canDelete={false}
      dispatch={[Function]}
      inProgress={false}
      isSelected={false}
      onPress={[Function]}
      palletId="41"
      palletLocation="ABAR1-2"
      pickListItems={
        Array [
          Object {
            "assignedAssociate": "",
            "category": 3,
            "createTs": "2022-04-03T12:55:31.9633333Z",
            "createdBy": "Guude",
            "id": 2,
            "itemDesc": "generic description",
            "itemNbr": 1,
            "moveToFront": false,
            "palletId": "41",
            "palletLocationId": 4,
            "palletLocationName": "ABAR1-2",
            "quickPick": false,
            "salesFloorLocationId": 5,
            "salesFloorLocationName": "ABAR1-3",
            "status": "ready to pick",
            "upcNbr": "1234567890123",
          },
        ]
      }
      pickStatus="ready to pick"
      showCheckbox={false}
    />
    <View
      style={
        Object {
          "borderTopColor": "#bdbdbd",
          "borderTopWidth": 2,
          "flexDirection": "row",
          "marginTop": "auto",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "margin": 5,
          }
        }
        title="[missing \\"en.PICKING.ACCEPT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </React.Fragment>
</RNCSafeAreaView>
`;
