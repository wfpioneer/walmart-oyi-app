// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PrintListScreen Test rendering items in the PrintListScreen Renders the NoPrintQueueMessage component 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "flex-start",
      "paddingVertical": 28,
    }
  }
>
  <IconButton
    backgroundColor="#eeeeee"
    disabled={true}
    height={250}
    icon={
      <mockConstructor
        color="#9e9e9e"
        name="printer"
        size={100}
      />
    }
    radius={250}
    type={1}
    width={250}
  />
  <Text
    style={
      Object {
        "color": "#616161",
        "marginVertical": 16,
      }
    }
  >
    [missing "en.PRINT.EMPTY_LIST" translation]
  </Text>
</View>
`;

exports[`PrintListScreen Test rendering items in the PrintListScreen Renders the PrintListScreen with a single item 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PrintQueueEdit
      countryCode="MX"
      itemIndexToEdit={-1}
      printQueue={
        Array [
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Small",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
        ]
      }
      queueName="PRICESIGN"
      selectedPrinter={
        Object {
          "desc": "Default",
          "id": "123000000000",
          "labelsAvailable": Array [
            "price",
          ],
          "name": "Front desk printer",
          "type": 0,
        }
      }
      setItemIndexToEdit={[MockFunction]}
    />
  </CustomModalComponent>
  <Text
    style={
      Object {
        "borderBottomWidth": 1,
        "fontSize": 16,
        "paddingLeft": 10,
      }
    }
  >
    1 [missing "en.GENERICS.ITEM" translation]
  </Text>
  <FlatList
    ListEmptyComponent={<NoPrintQueueMessage />}
    data={
      Array [
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Small",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "elevation": 16,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "paddingBottom": 20,
        "paddingHorizontal": 4,
        "paddingTop": 8,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingVertical": 5,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 10,
          }
        }
      >
        <mockConstructor
          name="printer-check"
          size={24}
        />
        <Text
          style={
            Object {
              "color": "#000000",
              "fontSize": 14,
              "paddingLeft": 5,
              "paddingTop": 4,
            }
          }
        >
          Front desk printer
        </Text>
      </View>
      <TouchableOpacity
        onPress={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#0071e9",
              "fontSize": 14,
              "paddingRight": 10,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
      </TouchableOpacity>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 6,
          }
        }
        title="[missing \\"en.PRINT.PRINT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </View>
</View>
`;

exports[`PrintListScreen Test rendering items in the PrintListScreen Renders the PrintListScreen with multiple items 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PrintQueueEdit
      countryCode="MX"
      itemIndexToEdit={-1}
      printQueue={
        Array [
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "XSmall",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Small",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Medium",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Large",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Wine",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Store Use Item",
            "itemNbr": 789012,
            "paperSize": "XSmall",
            "signQty": 1,
            "upcNbr": "789012",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Store Use Item",
            "itemNbr": 789012,
            "paperSize": "Small",
            "signQty": 1,
            "upcNbr": "789012",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Store Use Item",
            "itemNbr": 789012,
            "paperSize": "Medium",
            "signQty": 1,
            "upcNbr": "789012",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Store Use Item",
            "itemNbr": 789012,
            "paperSize": "Large",
            "signQty": 1,
            "upcNbr": "789012",
            "worklistType": "NSFL",
          },
          Object {
            "catgNbr": 2,
            "itemName": "Store Use Item",
            "itemNbr": 789012,
            "paperSize": "Wine",
            "signQty": 1,
            "upcNbr": "789012",
            "worklistType": "NSFL",
          },
        ]
      }
      queueName="PRICESIGN"
      selectedPrinter={
        Object {
          "desc": "Default",
          "id": "123000000000",
          "labelsAvailable": Array [
            "price",
          ],
          "name": "Front desk printer",
          "type": 0,
        }
      }
      setItemIndexToEdit={[MockFunction]}
    />
  </CustomModalComponent>
  <Text
    style={
      Object {
        "borderBottomWidth": 1,
        "fontSize": 16,
        "paddingLeft": 10,
      }
    }
  >
    10 [missing "en.GENERICS.ITEMS" translation]
  </Text>
  <FlatList
    ListEmptyComponent={<NoPrintQueueMessage />}
    data={
      Array [
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "XSmall",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Small",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Medium",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Large",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Wine",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Store Use Item",
          "itemNbr": 789012,
          "paperSize": "XSmall",
          "signQty": 1,
          "upcNbr": "789012",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Store Use Item",
          "itemNbr": 789012,
          "paperSize": "Small",
          "signQty": 1,
          "upcNbr": "789012",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Store Use Item",
          "itemNbr": 789012,
          "paperSize": "Medium",
          "signQty": 1,
          "upcNbr": "789012",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Store Use Item",
          "itemNbr": 789012,
          "paperSize": "Large",
          "signQty": 1,
          "upcNbr": "789012",
          "worklistType": "NSFL",
        },
        Object {
          "catgNbr": 2,
          "itemName": "Store Use Item",
          "itemNbr": 789012,
          "paperSize": "Wine",
          "signQty": 1,
          "upcNbr": "789012",
          "worklistType": "NSFL",
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "elevation": 16,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "paddingBottom": 20,
        "paddingHorizontal": 4,
        "paddingTop": 8,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingVertical": 5,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 10,
          }
        }
      >
        <mockConstructor
          name="printer-check"
          size={24}
        />
        <Text
          style={
            Object {
              "color": "#000000",
              "fontSize": 14,
              "paddingLeft": 5,
              "paddingTop": 4,
            }
          }
        >
          Front desk printer
        </Text>
      </View>
      <TouchableOpacity
        onPress={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#0071e9",
              "fontSize": 14,
              "paddingRight": 10,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
      </TouchableOpacity>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 6,
          }
        }
        title="[missing \\"en.PRINT.PRINT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </View>
</View>
`;

exports[`PrintListScreen Test rendering items in the PrintListScreen Renders the PrintListScreen with the PrintQueueEdit Modal as visible 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Form"
    onClose={[Function]}
  >
    <PrintQueueEdit
      countryCode="MX"
      itemIndexToEdit={0}
      printQueue={
        Array [
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Small",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
        ]
      }
      queueName="PRICESIGN"
      selectedPrinter={
        Object {
          "desc": "Default",
          "id": "123000000000",
          "labelsAvailable": Array [
            "price",
          ],
          "name": "Front desk printer",
          "type": 0,
        }
      }
      setItemIndexToEdit={[MockFunction]}
    />
  </CustomModalComponent>
  <Text
    style={
      Object {
        "borderBottomWidth": 1,
        "fontSize": 16,
        "paddingLeft": 10,
      }
    }
  >
    1 [missing "en.GENERICS.ITEM" translation]
  </Text>
  <FlatList
    ListEmptyComponent={<NoPrintQueueMessage />}
    data={
      Array [
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Small",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "elevation": 16,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "paddingBottom": 20,
        "paddingHorizontal": 4,
        "paddingTop": 8,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingVertical": 5,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 10,
          }
        }
      >
        <mockConstructor
          name="printer-check"
          size={24}
        />
        <Text
          style={
            Object {
              "color": "#000000",
              "fontSize": 14,
              "paddingLeft": 5,
              "paddingTop": 4,
            }
          }
        >
          Front desk printer
        </Text>
      </View>
      <TouchableOpacity
        onPress={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#0071e9",
              "fontSize": 14,
              "paddingRight": 10,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
      </TouchableOpacity>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 6,
          }
        }
        title="[missing \\"en.PRINT.PRINT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </View>
</View>
`;

exports[`PrintListScreen Test rendering items in the PrintListScreen Renders the default empty PrintListScreen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PrintQueueEdit
      countryCode="MX"
      itemIndexToEdit={-1}
      printQueue={Array []}
      queueName="PRICESIGN"
      selectedPrinter={
        Object {
          "desc": "Default",
          "id": "123000000000",
          "labelsAvailable": Array [
            "price",
          ],
          "name": "Front desk printer",
          "type": 0,
        }
      }
      setItemIndexToEdit={[MockFunction]}
    />
  </CustomModalComponent>
  <FlatList
    ListEmptyComponent={<NoPrintQueueMessage />}
    data={Array []}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "elevation": 16,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "paddingBottom": 20,
        "paddingHorizontal": 4,
        "paddingTop": 8,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingVertical": 5,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingLeft": 10,
          }
        }
      >
        <mockConstructor
          name="printer-check"
          size={24}
        />
        <Text
          style={
            Object {
              "color": "#000000",
              "fontSize": 14,
              "paddingLeft": 5,
              "paddingTop": 4,
            }
          }
        >
          Front desk printer
        </Text>
      </View>
      <TouchableOpacity
        onPress={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#0071e9",
              "fontSize": 14,
              "paddingRight": 10,
            }
          }
        >
          [missing "en.GENERICS.CHANGE" translation]
        </Text>
      </TouchableOpacity>
    </View>
    <View
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <Button
        backgroundColor="#0071e9"
        disabled={true}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 6,
          }
        }
        title="[missing \\"en.PRINT.PRINT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </View>
</View>
`;

exports[`PrintListScreen Tests rendering printing api responses Renders the loading indicator when waiting for the printAPI response 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PrintQueueEdit
      countryCode="MX"
      itemIndexToEdit={-1}
      printQueue={
        Array [
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Small",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
        ]
      }
      queueName="PRICESIGN"
      selectedPrinter={
        Object {
          "desc": "Default",
          "id": "123000000000",
          "labelsAvailable": Array [
            "price",
          ],
          "name": "Front desk printer",
          "type": 0,
        }
      }
      setItemIndexToEdit={[MockFunction]}
    />
  </CustomModalComponent>
  <Text
    style={
      Object {
        "borderBottomWidth": 1,
        "fontSize": 16,
        "paddingLeft": 10,
      }
    }
  >
    1 [missing "en.GENERICS.ITEM" translation]
  </Text>
  <FlatList
    ListEmptyComponent={<NoPrintQueueMessage />}
    data={
      Array [
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Small",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "elevation": 16,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "paddingBottom": 20,
        "paddingHorizontal": 4,
        "paddingTop": 8,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#0071e9"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    />
  </View>
</View>
`;

exports[`PrintListScreen Tests rendering printing api responses Renders the loading indicator when waiting for the printLocationAPI response 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <PrintQueueEdit
      countryCode="MX"
      itemIndexToEdit={-1}
      printQueue={
        Array [
          Object {
            "catgNbr": 2,
            "itemName": "Test item",
            "itemNbr": 123456,
            "paperSize": "Small",
            "signQty": 1,
            "upcNbr": "123456",
            "worklistType": "NSFL",
          },
        ]
      }
      queueName="PRICESIGN"
      selectedPrinter={
        Object {
          "desc": "Default",
          "id": "123000000000",
          "labelsAvailable": Array [
            "price",
          ],
          "name": "Front desk printer",
          "type": 0,
        }
      }
      setItemIndexToEdit={[MockFunction]}
    />
  </CustomModalComponent>
  <Text
    style={
      Object {
        "borderBottomWidth": 1,
        "fontSize": 16,
        "paddingLeft": 10,
      }
    }
  >
    1 [missing "en.GENERICS.ITEM" translation]
  </Text>
  <FlatList
    ListEmptyComponent={<NoPrintQueueMessage />}
    data={
      Array [
        Object {
          "catgNbr": 2,
          "itemName": "Test item",
          "itemNbr": 123456,
          "paperSize": "Small",
          "signQty": 1,
          "upcNbr": "123456",
          "worklistType": "NSFL",
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "elevation": 16,
        "flexDirection": "column",
        "justifyContent": "space-around",
        "paddingBottom": 20,
        "paddingHorizontal": 4,
        "paddingTop": 8,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#0071e9"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    />
  </View>
</View>
`;
