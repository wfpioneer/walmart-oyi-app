// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests Reserve Section Details Screen Tests rendering Get Section Details api responses Renders Location Details error message 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "width": "95%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`Tests Reserve Section Details Screen Tests rendering Get Section Details api responses Renders activity indicator when waiting for get pallet details api response 1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`Tests Reserve Section Details Screen Tests rendering Get Section Details api responses Renders activity indicator when waiting for get section details api response 1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`Tests Reserve Section Details Screen Tests rendering Reserve Section details screen data Renders List Empty Component if palletDetails returns with no data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <ForwardRef
    ListEmptyComponent={
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 28,
          }
        }
      >
        <mockConstructor
          color="#5FA7F2"
          name="information"
          size={40}
        />
        <Text>
          [missing "en.LOCATION.RESERVE_EMPTY" translation]
        </Text>
      </View>
    }
    data={[]}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Tests Reserve Section Details Screen Tests rendering Reserve Section details screen data Renders List Empty Component if sectionDetails returns with no data 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <ForwardRef
    ListEmptyComponent={
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 28,
          }
        }
      >
        <mockConstructor
          color="#5FA7F2"
          name="information"
          size={40}
        />
        <Text>
          [missing "en.LOCATION.RESERVE_EMPTY" translation]
        </Text>
      </View>
    }
    data={
      [
        {
          "createDate": "2022-01-05T12:04:50.000Z",
          "expirationDate": "12/31/2022",
          "id": 1,
          "items": [
            {
              "itemDesc": "Nature Valley Honey Nut Granola Bars",
              "itemNbr": 500252,
              "locationType": 8,
              "price": 0,
              "upcNbr": "750500252570",
            },
            {
              "itemDesc": "Cabbage",
              "itemNbr": 123456,
              "locationType": 8,
              "price": 0,
              "upcNbr": "123456000789",
            },
          ],
          "palletCreateTS": "2022-01-03T14:22:34.000Z",
          "palletId": "1",
          "statusCode": 200,
        },
        {
          "createDate": "2022-01-05T12:04:50.000Z",
          "expirationDate": "12/31/2022",
          "id": 123,
          "items": [
            {
              "itemDesc": "Nature Valley Granola Bars",
              "itemNbr": 456789,
              "locationType": 8,
              "price": 1298,
              "upcNbr": "456789000123",
            },
          ],
          "palletCreateTS": "2022-01-03T14:22:34.000Z",
          "palletId": "123",
          "statusCode": 200,
        },
        {
          "createDate": "2022-01-05T12:04:50.000Z",
          "expirationDate": "12/31/2022",
          "id": 456,
          "items": [
            {
              "itemDesc": "MM电池5号24粒.",
              "itemNbr": 123789,
              "locationType": 8,
              "price": 29.9,
              "upcNbr": "123789000456",
            },
          ],
          "palletCreateTS": "2022-01-03T14:22:34.000Z",
          "palletId": "456",
          "statusCode": 200,
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Tests Reserve Section Details Screen Tests rendering Reserve Section details screen data Renders Reserve Details Screen with Mock Reserve Items 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <ForwardRef
    ListEmptyComponent={
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 28,
          }
        }
      >
        <mockConstructor
          color="#5FA7F2"
          name="information"
          size={40}
        />
        <Text>
          [missing "en.LOCATION.RESERVE_EMPTY" translation]
        </Text>
      </View>
    }
    data={
      [
        {
          "createDate": "2022-01-05T12:04:50.000Z",
          "expirationDate": "12/31/2022",
          "id": 1,
          "items": [
            {
              "itemDesc": "Nature Valley Honey Nut Granola Bars",
              "itemNbr": 500252,
              "locationType": 8,
              "price": 0,
              "upcNbr": "750500252570",
            },
            {
              "itemDesc": "Cabbage",
              "itemNbr": 123456,
              "locationType": 8,
              "price": 0,
              "upcNbr": "123456000789",
            },
          ],
          "palletCreateTS": "2021-01-01",
          "palletId": "1",
          "statusCode": 200,
        },
        {
          "createDate": "2022-01-05T12:04:50.000Z",
          "expirationDate": "12/31/2022",
          "id": 123,
          "items": [
            {
              "itemDesc": "Nature Valley Granola Bars",
              "itemNbr": 456789,
              "locationType": 8,
              "price": 1298,
              "upcNbr": "456789000123",
            },
          ],
          "palletCreateTS": "2021-01-10",
          "palletId": "123",
          "statusCode": 200,
        },
        {
          "createDate": "2022-01-05T12:04:50.000Z",
          "expirationDate": "12/31/2022",
          "id": 456,
          "items": [
            {
              "itemDesc": "MM电池5号24粒.",
              "itemNbr": 123789,
              "locationType": 8,
              "price": 29.9,
              "upcNbr": "123789000456",
            },
          ],
          "palletCreateTS": "1999-10-10",
          "palletId": "456",
          "statusCode": 200,
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Tests Reserve Section Details Screen Tests rendering Reserve Section details screen data render screen with redux 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 28,
          }
        }
      >
        <mockConstructor
          color="#5FA7F2"
          name="information"
          size={40}
        />
        <Text>
          [missing "en.LOCATION.RESERVE_EMPTY" translation]
        </Text>
      </View>
    }
    collapsable={false}
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    handlerTag={1}
    handlerType="NativeViewGestureHandler"
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
    waitFor={
      [
        {
          "current": null,
        },
        {
          "current": null,
        },
      ]
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 28,
          }
        }
      >
        <Text>
          [missing "en.LOCATION.RESERVE_EMPTY" translation]
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
