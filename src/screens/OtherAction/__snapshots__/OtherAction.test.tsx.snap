// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OtherActionScreen Tests Tests OtherAction Screen buttons Renders + Calls renderChooseActionRadioButtons 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "flexDirection": "row",
      "height": 50,
      "justifyContent": "flex-start",
      "marginVertical": 5,
      "opacity": 1,
    }
  }
  testID="radio action button"
>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
        "width": "10%",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#0071e9"
      name="radiobox-marked"
      size={15}
    />
  </View>
  <View
    style={
      {
        "alignContent": "flex-end",
        "flex": 1,
        "justifyContent": "space-evenly",
      }
    }
  >
    <Text
      numberOfLines={2}
      style={
        [
          {
            "fontSize": 16,
            "width": "90%",
          },
          false,
        ]
      }
    >
      Scan for No Action
    </Text>
    <Text
      style={
        {
          "color": "#9e9e9e",
          "fontSize": 12,
          "width": "90%",
        }
      }
    >
      No Action Required
    </Text>
  </View>
</View>
`;

exports[`OtherActionScreen Tests renders the OtherActionScreen 1`] = `
<View
  style={
    {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "borderBottomColor": "#e0e0e0",
        "borderBottomWidth": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "#ffffffff",
          "padding": 8,
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "flex-start",
          }
        }
      >
        <View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
          <Text
            style={
              {
                "fontSize": 16,
                "fontWeight": "bold",
                "marginVertical": 4,
              }
            }
          >
            Test Item That is Really, Really Long (and has parenthesis)
          </Text>
          <View
            style={
              {
                "flexDirection": "row",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#616161",
                  "fontSize": 12,
                }
              }
            >
              [missing "en.ITEM.ITEM" translation] 1234567890
            </Text>
            <Text
              style={
                {
                  "color": "#616161",
                  "fontSize": 12,
                  "marginHorizontal": 8,
                }
              }
            >
              |
            </Text>
            <Text
              style={
                {
                  "color": "#616161",
                  "fontSize": 12,
                }
              }
            >
              [missing "en.ITEM.UPC" translation] 000055559999
            </Text>
          </View>
          <Text
            style={
              {
                "color": "#616161",
                "fontSize": 12,
                "marginBottom": 4,
              }
            }
          >
            [missing "en.ITEM.STATUS" translation]: Active
          </Text>
          <Text
            style={
              {
                "color": "#616161",
                "fontSize": 12,
                "marginBottom": 4,
              }
            }
          >
            [missing "en.ITEM.CATEGORY" translation]: 93 - Meat PI
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Text
    numberOfLines={2}
    style={
      {
        "alignSelf": "center",
        "color": "#9e9e9e",
        "marginVertical": 5,
        "width": "90%",
      }
    }
  >
    [missing "en.ITEM.DESIRED_ACTION" translation]
  </Text>
  <RCTScrollView
    collapsable={false}
    getItem={[Function]}
    getItemCount={[Function]}
    handlerTag={1}
    handlerType="NativeViewGestureHandler"
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
    waitFor={
      [
        {
          "current": null,
        },
        {
          "current": null,
        },
      ]
    }
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`OtherActionScreen Tests renders the OtherActionScreen with desired Action buttons 1`] = `
<View
  style={
    {
      "backgroundColor": "#ffffffff",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "borderBottomColor": "#e0e0e0",
        "borderBottomWidth": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "#ffffffff",
          "padding": 8,
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "flex-start",
          }
        }
      >
        <View>
          <Text
            style={
              {
                "color": "#d938ab",
                "fontSize": 12,
                "fontWeight": "bold",
              }
            }
          >
            [missing "en.EXCEPTION.CANCELLED" translation]
          </Text>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          />
          <Text
            style={
              {
                "fontSize": 16,
                "fontWeight": "bold",
                "marginVertical": 4,
              }
            }
          >
            Test Item That is Really, Really Long (and has parenthesis)
          </Text>
          <View
            style={
              {
                "flexDirection": "row",
                "marginBottom": 4,
                "marginTop": 4,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#616161",
                  "fontSize": 12,
                }
              }
            >
              [missing "en.ITEM.ITEM" translation] 1234567890
            </Text>
            <Text
              style={
                {
                  "color": "#616161",
                  "fontSize": 12,
                  "marginHorizontal": 8,
                }
              }
            >
              |
            </Text>
            <Text
              style={
                {
                  "color": "#616161",
                  "fontSize": 12,
                }
              }
            >
              [missing "en.ITEM.UPC" translation] 000055559999
            </Text>
          </View>
          <Text
            style={
              {
                "color": "#616161",
                "fontSize": 12,
                "marginBottom": 4,
              }
            }
          >
            [missing "en.ITEM.STATUS" translation]: Active
          </Text>
          <Text
            style={
              {
                "color": "#616161",
                "fontSize": 12,
                "marginBottom": 4,
              }
            }
          >
            [missing "en.ITEM.CATEGORY" translation]: 93 - Meat PI
          </Text>
        </View>
      </View>
    </View>
  </View>
  <Text
    numberOfLines={2}
    style={
      {
        "alignSelf": "center",
        "color": "#9e9e9e",
        "marginVertical": 5,
        "width": "90%",
      }
    }
  >
    [missing "en.ITEM.DESIRED_ACTION" translation]
  </Text>
  <RCTScrollView
    collapsable={false}
    data={
      [
        {
          "isDisabled": false,
          "subText": "[missing "en.LOCATION.CHANGE_LOCATION" translation]",
          "title": "[missing "en.LOCATION.EDIT_LOCATION" translation]",
        },
        {
          "isDisabled": false,
          "subText": "[missing "en.ITEM.CHOOSE_TOTAL_OH" translation]",
          "title": "[missing "en.APPROVAL.OH_CHANGE" translation]",
        },
        {
          "disabledText": "[missing "en.PICKING.NO_RESERVE_PALLET_AVAILABLE_ERROR" translation]",
          "isDisabled": true,
          "subText": "[missing "en.ITEM.CHOOSE_RESERVE" translation]",
          "title": "[missing "en.ITEM.CLEAN_RESERVE" translation]",
        },
        {
          "isDisabled": false,
          "subText": "[missing "en.ITEM.NO_ACTION_NEEDED" translation]",
          "title": "[missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    handlerTag={2}
    handlerType="NativeViewGestureHandler"
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
    waitFor={
      [
        {
          "current": null,
        },
        {
          "current": null,
        },
      ]
    }
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "flex-start",
              "marginVertical": 5,
              "opacity": 1,
            }
          }
          testID="radio action button"
        >
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "10%",
              }
            }
          >
            <mockMaterialCommunityIcons
              color="#0071e9"
              name="radiobox-blank"
              size={15}
            />
          </View>
          <View
            style={
              {
                "alignContent": "flex-end",
                "flex": 1,
                "justifyContent": "space-evenly",
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 16,
                    "width": "90%",
                  },
                  false,
                ]
              }
            >
              [missing "en.LOCATION.EDIT_LOCATION" translation]
            </Text>
            <Text
              style={
                {
                  "color": "#9e9e9e",
                  "fontSize": 12,
                  "width": "90%",
                }
              }
            >
              [missing "en.LOCATION.CHANGE_LOCATION" translation]
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "flex-start",
              "marginVertical": 5,
              "opacity": 1,
            }
          }
          testID="radio action button"
        >
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "10%",
              }
            }
          >
            <mockMaterialCommunityIcons
              color="#0071e9"
              name="radiobox-blank"
              size={15}
            />
          </View>
          <View
            style={
              {
                "alignContent": "flex-end",
                "flex": 1,
                "justifyContent": "space-evenly",
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 16,
                    "width": "90%",
                  },
                  false,
                ]
              }
            >
              [missing "en.APPROVAL.OH_CHANGE" translation]
            </Text>
            <Text
              style={
                {
                  "color": "#9e9e9e",
                  "fontSize": 12,
                  "width": "90%",
                }
              }
            >
              [missing "en.ITEM.CHOOSE_TOTAL_OH" translation]
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": true,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "flex-start",
              "marginVertical": 5,
              "opacity": 1,
            }
          }
          testID="radio action button"
        >
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "10%",
              }
            }
          >
            <mockMaterialCommunityIcons
              color="#888888"
              name="radiobox-blank"
              size={15}
            />
          </View>
          <View
            style={
              {
                "alignContent": "flex-end",
                "flex": 1,
                "justifyContent": "space-evenly",
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 16,
                    "width": "90%",
                  },
                  {
                    "color": "#9e9e9e",
                  },
                ]
              }
            >
              [missing "en.ITEM.CLEAN_RESERVE" translation]
            </Text>
            <Text
              style={
                {
                  "color": "#9e9e9e",
                  "fontSize": 12,
                  "width": "90%",
                }
              }
            >
              [missing "en.ITEM.CHOOSE_RESERVE" translation]
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "backgroundColor": "#ffcccc",
              "elevation": 4,
              "flex": 1,
              "justifyContent": "center",
              "marginBottom": 5,
              "marginHorizontal": 20,
            }
          }
        >
          <View
            style={
              {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginVertical": 10,
              }
            }
          >
            <mockMaterialCommunityIcons
              color="#e74517"
              name="alert-circle"
              size={20}
              style={
                {
                  "paddingHorizontal": 5,
                }
              }
            />
            <Text
              style={
                {
                  "width": "80%",
                }
              }
            >
              [missing "en.PICKING.NO_RESERVE_PALLET_AVAILABLE_ERROR" translation]
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "height": 50,
              "justifyContent": "flex-start",
              "marginVertical": 5,
              "opacity": 1,
            }
          }
          testID="radio action button"
        >
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "10%",
              }
            }
          >
            <mockMaterialCommunityIcons
              color="#0071e9"
              name="radiobox-blank"
              size={15}
            />
          </View>
          <View
            style={
              {
                "alignContent": "flex-end",
                "flex": 1,
                "justifyContent": "space-evenly",
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                [
                  {
                    "fontSize": 16,
                    "width": "90%",
                  },
                  false,
                ]
              }
            >
              [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
            </Text>
            <Text
              style={
                {
                  "color": "#9e9e9e",
                  "fontSize": 12,
                  "width": "90%",
                }
              }
            >
              [missing "en.ITEM.NO_ACTION_NEEDED" translation]
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
