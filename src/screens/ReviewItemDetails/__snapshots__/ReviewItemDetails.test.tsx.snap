// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReviewItemDetailsScreen Manage ReviewItemDetails externalized function tests test isError 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#00000099",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignContent": "center",
              "alignSelf": "center",
              "backgroundColor": "#ffffffff",
              "borderColor": "#545F7A",
              "borderRadius": 10,
              "borderStyle": "solid",
              "borderWidth": 1,
              "justifyContent": "center",
              "padding": 10,
              "width": "80%",
            },
            Object {
              "minHeight": undefined,
            },
          ]
        }
      >
        <mockMaterialCommunityIcons
          color="#f44336"
          name="alert"
          size={30}
          style={
            Object {
              "alignSelf": "center",
            }
          }
        />
        <Text
          style={
            Object {
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
        </Text>
        <View
          style={
            Object {
              "alignContent": "space-around",
              "flexDirection": "row",
              "justifyContent": "center",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 45,
                },
                Object {
                  "marginTop": 16,
                  "width": "70%",
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#D6512D",
                    "borderRadius": 5,
                    "elevation": 1,
                    "flex": 1,
                    "justifyContent": "center",
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#ffffffff",
                      "fontFamily": "Roboto-Medium",
                      "fontSize": 16,
                      "fontWeight": "normal",
                      "textAlign": undefined,
                    }
                  }
                >
                  [missing "en.GENERICS.OK" translation]
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#e57373"
      name="alert"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.API_ERROR" translation]
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e57373",
          "borderRadius": 4,
          "height": 40,
          "justifyContent": "center",
          "marginVertical": 10,
          "opacity": 1,
          "width": "95%",
        }
      }
      testID="scanErrorRetry"
    >
      <Text>
        [missing "en.GENERICS.RETRY" translation]
      </Text>
    </View>
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Manage ReviewItemDetails externalized function tests test isError 2`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#e57373"
      name="alert"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.API_ERROR" translation]
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e57373",
          "borderRadius": 4,
          "height": 40,
          "justifyContent": "center",
          "marginVertical": 10,
          "opacity": 1,
          "width": "95%",
        }
      }
      testID="scanErrorRetry"
    >
      <Text>
        [missing "en.GENERICS.RETRY" translation]
      </Text>
    </View>
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Manage ReviewItemDetails externalized function tests test isError 3`] = `<View />`;

exports[`ReviewItemDetailsScreen Manage ReviewItemDetails externalized function tests test onIsWaiting 1`] = `
<View>
  <ActivityIndicator
    animating={true}
    color="#0071e9"
    hidesWhenStopped={true}
    size="large"
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  />
</View>
`;

exports[`ReviewItemDetailsScreen Manage ReviewItemDetails externalized function tests test onIsWaiting 2`] = `<View />`;

exports[`ReviewItemDetailsScreen Tests Rendering 'Scan for No Action Button' Renders Activity Indicator waiting for No Action Response 1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "center",
    }
  }
/>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'Scan for No Action Button' Renders Nothing for' Scan for No Action' button 1`] = `<View />`;

exports[`ReviewItemDetailsScreen Tests Rendering 'Scan for No Action Button' Renders Scan for No Action Button if Platform is Android 1`] = `
<TouchableOpacity
  hostRef={null}
  onPress={[Function]}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#0071e9",
      "borderColor": "#0071e9",
      "borderRadius": 4,
      "borderWidth": 1,
      "flexDirection": "row",
      "height": 40,
      "justifyContent": "center",
      "marginHorizontal": 15,
      "marginVertical": 10,
      "paddingVertical": 10,
    }
  }
>
  <mockMaterialCommunityIcons
    color="#ffffffff"
    name="barcode-scan"
    size={20}
  />
  <Text
    style={
      Object {
        "color": "#ffffffff",
        "marginLeft": 10,
        "textAlign": "center",
      }
    }
  >
    [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
  </Text>
</TouchableOpacity>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderOHChangeHistory' Renders OH history flat list 1`] = `
<View>
  <CollapsibleHeaderCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.OH_CHANGE_HISTORY\\" translation]"
    titleStyle={Object {}}
    toggleIsOpened={[Function]}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderOHChangeHistory' Renders OH history with error msg for result status 207 1`] = `
<View>
  <CollapsibleHeaderCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.OH_CHANGE_HISTORY\\" translation]"
    titleStyle={Object {}}
    toggleIsOpened={[Function]}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderOHChangeHistory' Renders OH history with no data for pick msg 1`] = `
<View>
  <CollapsibleHeaderCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.OH_CHANGE_HISTORY\\" translation]"
    titleStyle={Object {}}
    toggleIsOpened={[Function]}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderPickHistory' Renders pick history flat list 1`] = `
<View>
  <CollapsibleHeaderCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.PICK_HISTORY\\" translation]"
    titleStyle={Object {}}
    toggleIsOpened={[Function]}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderPickHistory' Renders pick history with error msg for result status 207 1`] = `
<View>
  <CollapsibleHeaderCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.PICK_HISTORY\\" translation]"
    titleStyle={Object {}}
    toggleIsOpened={[Function]}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderPickHistory' Renders pick history with no data for pick msg 1`] = `
<View>
  <CollapsibleHeaderCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.PICK_HISTORY\\" translation]"
    titleStyle={Object {}}
    toggleIsOpened={[Function]}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderReplenishments' Renders replenishment card with delivery history 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 1,
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.ITEM.REPLENISHMENT" translation]
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 1,
        "paddingHorizontal": 10,
        "paddingVertical": 8,
      }
    }
  >
    <Text>
      [missing "en.ITEM.ON_ORDER" translation]
    </Text>
    <Text>
      48
    </Text>
  </View>
  <CollapsibleCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.HISTORY\\" translation]"
    titleStyle={Object {}}
  >
    <RenderItemHistoryCard
      date="2022-07-26"
      qty={23}
    />
    <RenderItemHistoryCard
      date="2022-07-25"
      qty={44}
    />
    <RenderItemHistoryCard
      date="2022-06-23"
      qty={23}
    />
  </CollapsibleCard>
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderReplenishments' Renders replenishment card with no delivery history 1`] = `
<View>
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 1,
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.ITEM.REPLENISHMENT" translation]
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 1,
        "paddingHorizontal": 10,
        "paddingVertical": 8,
      }
    }
  >
    <Text>
      [missing "en.ITEM.ON_ORDER" translation]
    </Text>
    <Text>
      48
    </Text>
  </View>
  <CollapsibleCard
    icon=""
    isOpened={false}
    title="[missing \\"en.ITEM.HISTORY\\" translation]"
    titleStyle={Object {}}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffffff",
          "flex": 1,
          "padding": 10,
        }
      }
    >
      <Text>
        [missing "en.ITEM.NO_HISTORY" translation]
      </Text>
    </View>
  </CollapsibleCard>
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering 'renderReserveLocQtys' Renders reserve location list 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingLeft": 2,
        "paddingRight": 3,
        "paddingVertical": 3,
      }
    }
  >
    <Text>
      A1-1
    </Text>
    <Text>
      10
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingLeft": 2,
        "paddingRight": 3,
        "paddingVertical": 3,
      }
    }
  >
    <Text>
      A1-2
    </Text>
    <Text>
      20
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingLeft": 2,
        "paddingRight": 3,
        "paddingVertical": 3,
      }
    }
  >
    <Text>
      B1-1
    </Text>
    <Text>
      30
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingLeft": 2,
        "paddingRight": 3,
        "paddingVertical": 3,
      }
    }
  >
    <Text>
      D1-1
    </Text>
    <Text>
      50
    </Text>
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests Rendering Scanned Barcode Error Renders the barcodeErrorModal isVisible set to False 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={false}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderColor": "#545F7A",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "justifyContent": "center",
            "padding": 10,
            "width": "80%",
          },
          Object {
            "minHeight": undefined,
          },
        ]
      }
    >
      <mockMaterialCommunityIcons
        color="#f44336"
        name="alert"
        size={30}
        style={
          Object {
            "alignSelf": "center",
          }
        }
      />
      <Text
        style={
          Object {
            "fontSize": 16,
            "textAlign": "center",
          }
        }
      >
        [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "marginTop": 16,
              "width": "70%",
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </View>
  </View>
</Modal>
`;

exports[`ReviewItemDetailsScreen Tests Rendering Scanned Barcode Error Renders the barcodeErrorModal isVisible set to True 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#00000099",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignContent": "center",
            "alignSelf": "center",
            "backgroundColor": "#ffffffff",
            "borderColor": "#545F7A",
            "borderRadius": 10,
            "borderStyle": "solid",
            "borderWidth": 1,
            "justifyContent": "center",
            "padding": 10,
            "width": "80%",
          },
          Object {
            "minHeight": undefined,
          },
        ]
      }
    >
      <mockMaterialCommunityIcons
        color="#f44336"
        name="alert"
        size={30}
        style={
          Object {
            "alignSelf": "center",
          }
        }
      />
      <Text
        style={
          Object {
            "fontSize": 16,
            "textAlign": "center",
          }
        }
      >
        [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
      </Text>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "marginTop": 16,
              "width": "70%",
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </View>
  </View>
</Modal>
`;

exports[`ReviewItemDetailsScreen Tests rendering for Adding an Item to the Picklist renders 'Add to Picklist Error' Retry 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-end",
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "color": "#f44336",
      }
    }
  >
    [missing "en.ITEM.ADDED_TO_PICKLIST_ERROR" translation]
  </Text>
  <Button
    backgroundColor="#0071e9"
    disabled={false}
    height={28}
    onPress={[Function]}
    radius={5}
    title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
    titleColor="#0071e9"
    titleFontSize={12}
    titleFontWeight="bold"
    type={3}
    width={-1}
  />
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for Adding an Item to the Picklist renders 'Item Added to Picklist ' 1`] = `
<Text
  style={
    Object {
      "color": "#33691E",
    }
  }
>
  [missing "en.ITEM.ADDED_TO_PICKLIST" translation]
</Text>
`;

exports[`ReviewItemDetailsScreen Tests rendering for Adding an Item to the Picklist renders 'Reserve Item Needed' to Add to Picklist 1`] = `
<Text>
  [missing "en.ITEM.RESERVE_NEEDED" translation]
</Text>
`;

exports[`ReviewItemDetailsScreen Tests rendering for Adding an Item to the Picklist renders a Loader when waiting for Picklist response 1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`ReviewItemDetailsScreen Tests rendering for On Hands Quantity component renders Negative On Hands Quantity 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 10,
    }
  }
>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 0,
          },
          false,
        ]
      }
    >
      <Text>
        [missing "en.ITEM.ON_HANDS" translation]
      </Text>
      <Text>
        -25
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.SALES_FLOOR_QTY" translation]
      </Text>
      <Text>
        -46
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.RESERVE_QTY" translation]
      </Text>
      <Text>
        6
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.CLAIMS_QTY" translation]
      </Text>
      <Text>
        5
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.CONSOLIDATED_QTY" translation]
      </Text>
      <Text>
        10
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.IN_TRANSIT_FLY_QTY" translation]
      </Text>
      <Text>
        10
      </Text>
    </View>
  </React.Fragment>
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for On Hands Quantity component renders Pending On Hands Quantity 'Pending Mgr Approval' 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 10,
    }
  }
>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 0,
          },
          false,
        ]
      }
    >
      <Text>
        [missing "en.ITEM.ON_HANDS" translation]
      </Text>
      <Text>
        -25 (40)
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "paddingBottom": 16,
          "paddingLeft": 10,
        }
      }
    >
      <IconClass
        brand={false}
        color="#e74517"
        light={false}
        name="info-circle"
        regular={false}
        size={12}
        solid={false}
        style={
          Object {
            "paddingRight": 6,
          }
        }
      />
      <Text>
        [missing "en.ITEM.PENDING_MGR_APPROVAL" translation]
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.SALES_FLOOR_QTY" translation]
      </Text>
      <Text>
        -46
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.RESERVE_QTY" translation]
      </Text>
      <Text>
        6
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.CLAIMS_QTY" translation]
      </Text>
      <Text>
        5
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.CONSOLIDATED_QTY" translation]
      </Text>
      <Text>
        10
      </Text>
    </View>
  </React.Fragment>
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for On Hands Quantity component renders Positive On Hands Quantity 'No Pending Mgr Approval' 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 10,
    }
  }
>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 0,
          },
          false,
        ]
      }
    >
      <Text>
        [missing "en.ITEM.ON_HANDS" translation]
      </Text>
      <Text>
        20
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.SALES_FLOOR_QTY" translation]
      </Text>
      <Text>
        -1
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.RESERVE_QTY" translation]
      </Text>
      <Text>
        6
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.CLAIMS_QTY" translation]
      </Text>
      <Text>
        5
      </Text>
    </View>
  </React.Fragment>
  <React.Fragment>
    <View
      style={
        Array [
          Object {
            "borderTopColor": "#e0e0e0",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 10,
            "paddingVertical": 12,
          },
          Object {
            "borderTopWidth": 1,
          },
          Object {
            "paddingLeft": 30,
          },
        ]
      }
    >
      <Text>
        [missing "en.ITEM.CONSOLIDATED_QTY" translation]
      </Text>
      <Text>
        10
      </Text>
    </View>
  </React.Fragment>
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for the Location Component renders 'Floor' location Name with no Reserve location 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 8,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.FLOOR" translation]
    </Text>
    <Text>
      A1-1
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.RESERVE" translation]
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 8,
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for the Location Component renders 'Reserve' location Name with no Floor location 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 8,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.FLOOR" translation]
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.RESERVE" translation]
    </Text>
    <Text>
      A1-1
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 8,
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for the Location Component renders both the floor & reserve Location Names 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 8,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.FLOOR" translation]
    </Text>
    <Text>
      A1-1
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.RESERVE" translation]
    </Text>
    <Text>
      A1-1
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 8,
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests rendering for the Location Component renders button for adding a Reserve & Floor Location 1`] = `
<View
  style={
    Object {
      "paddingHorizontal": 8,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.FLOOR" translation]
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "#f5f5f5",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingVertical": 14,
      }
    }
  >
    <Text>
      [missing "en.ITEM.RESERVE" translation]
    </Text>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 8,
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses render screen with redux 1`] = `
<ActivityIndicator
  animating={false}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders "Generic Change translation" if pendingOH is -999 and user has OH role 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.CHANGE\\" translation]"
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders 'Activity Indicator' waiting for ItemDetails Response  1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders 'Item Details Api Error' for a failed request  1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#e57373"
      name="alert"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.API_ERROR" translation]
    </Text>
    <TouchableOpacity
      onPress={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#e57373",
          "borderRadius": 4,
          "height": 40,
          "justifyContent": "center",
          "marginVertical": 10,
          "width": "95%",
        }
      }
      testID="scanErrorRetry"
    >
      <Text>
        [missing "en.GENERICS.RETRY" translation]
      </Text>
    </TouchableOpacity>
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders 'Scanned Item Not Found' on request status 204 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#5FA7F2"
      name="information"
      size={40}
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.ITEM_NOT_FOUND" translation]
    </Text>
  </View>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders extra details & change/pick history for a single item when AdditionItemDetails Flag is true 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={true}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <React.Fragment>
        <View
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <CollapsibleCard
            icon=""
            isOpened={false}
            title="[missing \\"en.ITEM.OH_CHANGE_HISTORY\\" translation]"
            titleStyle={Object {}}
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "flex": 1,
                  "padding": 10,
                }
              }
            >
              <Text
                testID="msg-no-pick-data"
              >
                [missing "en.ITEM.NO_OH_CHANGE_HISTORY" translation]
              </Text>
            </View>
          </CollapsibleCard>
        </View>
        <View
          style={
            Object {
              "marginTop": 8,
            }
          }
        >
          <View>
            <View
              style={
                Object {
                  "backgroundColor": "#ffffffff",
                  "borderBottomColor": "#eeeeee",
                  "borderBottomWidth": 1,
                  "padding": 10,
                }
              }
            >
              <Text>
                [missing "en.ITEM.REPLENISHMENT" translation]
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "borderBottomColor": "#eeeeee",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 1,
                  "paddingHorizontal": 10,
                  "paddingVertical": 8,
                }
              }
            >
              <Text>
                [missing "en.ITEM.ON_ORDER" translation]
              </Text>
              <Text>
                48
              </Text>
            </View>
            <CollapsibleCard
              icon=""
              isOpened={false}
              title="[missing \\"en.ITEM.HISTORY\\" translation]"
              titleStyle={Object {}}
            >
              <RenderItemHistoryCard
                date="2022-07-26"
                qty={23}
              />
              <RenderItemHistoryCard
                date="2022-07-25"
                qty={44}
              />
              <RenderItemHistoryCard
                date="2022-06-23"
                qty={23}
              />
            </CollapsibleCard>
          </View>
        </View>
      </React.Fragment>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
          </View>
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffffff",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingLeft": 2,
                  "paddingRight": 3,
                  "paddingVertical": 3,
                }
              }
            >
              <Text>
                A1-1
              </Text>
              <Text>
                10
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <View
        style={
          Object {
            "marginTop": 8,
          }
        }
      >
        <CollapsibleCard
          icon=""
          isOpened={false}
          title="[missing \\"en.ITEM.PICK_HISTORY\\" translation]"
          titleStyle={Object {}}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffffff",
                "flex": 1,
                "padding": 10,
              }
            }
          >
            <Text
              testID="msg-no-pick-data"
            >
              [missing "en.ITEM.NO_PICK_HISTORY" translation]
            </Text>
          </View>
        </CollapsibleCard>
      </View>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders show openAudit link when showOpenAuditLink Flag is true 1`] = `
<ActivityIndicator
  animating={false}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the On Hands Cloud Qty of 42 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="99 - Store Use"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Small, Store Use Item"
        itemNbr={987654321}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="777555333"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": -11,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 0,
              },
              Object {
                "label": "[missing \\"en.ITEM.FLY_CLOUD_QTY\\" translation]",
                "value": 42,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Store Use",
              "categoryNbr": 99,
              "claimsOnHandQty": 5,
              "cloudQty": 42,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 0,
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Small, Store Use Item",
              "itemNbr": 987654321,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 20,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 0,
                    "week": 51,
                  },
                  Object {
                    "value": 10,
                    "week": 1,
                  },
                  Object {
                    "value": 27,
                    "week": 2,
                  },
                  Object {
                    "value": 10,
                    "week": 3,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "777555333",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the details for a item with multi status 207(error retreiving sales history) 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 40,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 0,
                    "week": 51,
                  },
                  Object {
                    "value": 10,
                    "week": 1,
                  },
                  Object {
                    "value": 27,
                    "week": 2,
                  },
                  Object {
                    "value": 10,
                    "week": 3,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the details for a single item with createPickModalVisible true 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the details for a single item with errorModalVisible true 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the details for a single item with non-null status 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the details for a single item with null status 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`ReviewItemDetailsScreen Tests renders ItemDetails API Responses renders the details for a single item with ohQtyModalVisible true 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <mockMaterialCommunityIcons
      color="#f44336"
      name="alert"
      size={30}
      style={
        Object {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        Object {
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      [missing "en.GENERICS.BARCODE_SCAN_ERROR" translation]
    </Text>
    <View
      style={
        Object {
          "alignContent": "space-around",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": "100%",
        }
      }
    >
      <Button
        backgroundColor="#D6512D"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginTop": 16,
            "width": "70%",
          }
        }
        title="[missing \\"en.GENERICS.OK\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </View>
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Form"
    onClose={[Function]}
  >
    <OHQtyUpdate
      error={null}
      handleClose={[Function]}
      handleSubmit={[Function]}
      isWaiting={false}
      newOHQty={42}
      onHandsQty={42}
      setNewOHQty={[MockFunction]}
    />
  </CustomModalComponent>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Form"
    onClose={[Function]}
  >
    <CreatePickDialog
      isQuickPick={false}
      locations={
        Array [
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-1",
            "sectionId": 1,
            "sectionName": "1",
            "type": "Sales Floor",
            "typeNbr": 8,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 0,
            "aisleName": "1",
            "locationName": "A1-2",
            "sectionId": 2,
            "sectionName": "2",
            "type": "End Cap",
            "typeNbr": 12,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-3",
            "sectionId": 3,
            "sectionName": "3",
            "type": "Pod",
            "typeNbr": 13,
            "zoneId": 0,
            "zoneName": "A",
          },
          Object {
            "aisleId": 1,
            "aisleName": "1",
            "locationName": "A1-4",
            "sectionId": 4,
            "sectionName": "4",
            "type": "Display",
            "typeNbr": 11,
            "zoneId": 0,
            "zoneName": "A",
          },
        ]
      }
      numberOfPallets={1}
      onClose={[Function]}
      onSubmit={[Function]}
      selectedSection=""
      setIsQuickPick={[MockFunction]}
      setNumberOfPallets={[MockFunction]}
      setSelectedSection={[MockFunction]}
    />
  </CustomModalComponent>
  <ScrollView
    contentContainerStyle={
      Object {
        "alignItems": "stretch",
        "justifyContent": "center",
      }
    }
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
  >
    <View>
      <ItemInfo
        additionalItemDetails={
          Object {
            "basePrice": 15.05,
            "color": "red",
            "grossProfit": 2.5,
            "margin": 14,
            "size": 88,
            "vendorPackQty": 33,
          }
        }
        category="93 - Meat PI"
        countryCode="MX"
        exceptionType="nsfl"
        itemName="Test Item That is Really, Really Long (and has parenthesis)"
        itemNbr={1234567890}
        navigationForPrint={
          Object {
            "addListener": [MockFunction],
            "canGoBack": [MockFunction],
            "dispatch": [MockFunction],
            "getId": [MockFunction],
            "getParent": [MockFunction],
            "getState": [MockFunction],
            "goBack": [MockFunction],
            "isFocused": [MockFunction],
            "navigate": [MockFunction],
            "removeListener": [MockFunction],
            "reset": [MockFunction],
            "setOptions": [MockFunction],
            "setParams": [MockFunction],
          }
        }
        price={2000.94}
        showAdditionalItemDetails={false}
        showItemImage={false}
        status="Active"
        upcNbr="000055559999"
      />
      <SFTCard
        iconName="pallet"
        title="[missing \\"en.ITEM.QUANTITY\\" translation]"
        topRightBtnAction={[Function]}
      >
        <ItemDetailsList
          indentAfterFirstRow={true}
          rows={
            Array [
              Object {
                "label": "[missing \\"en.ITEM.ON_HANDS\\" translation]",
                "value": 42,
              },
              Object {
                "label": "[missing \\"en.ITEM.SALES_FLOOR_QTY\\" translation]",
                "value": 21,
              },
              Object {
                "label": "[missing \\"en.ITEM.RESERVE_QTY\\" translation]",
                "value": 6,
              },
              Object {
                "label": "[missing \\"en.ITEM.CLAIMS_QTY\\" translation]",
                "value": 5,
              },
              Object {
                "label": "[missing \\"en.ITEM.CONSOLIDATED_QTY\\" translation]",
                "value": 10,
              },
            ]
          }
        />
      </SFTCard>
      <SFTCard
        title="[missing \\"en.ITEM.REPLENISHMENT\\" translation]"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingHorizontal": 10,
              "paddingVertical": 16,
            }
          }
        >
          <Text>
            [missing "en.ITEM.ON_ORDER" translation]
          </Text>
          <Text>
            48
          </Text>
        </View>
      </SFTCard>
      <SFTCard
        iconName="map-marker-alt"
        title="[missing \\"en.ITEM.LOCATION\\" translation](5)"
        topRightBtnAction={[Function]}
        topRightBtnTxt="[missing \\"en.GENERICS.SEE_ALL\\" translation]"
      >
        <View
          style={
            Object {
              "paddingHorizontal": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.FLOOR" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomColor": "#f5f5f5",
                "borderBottomWidth": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingVertical": 14,
              }
            }
          >
            <Text>
              [missing "en.ITEM.RESERVE" translation]
            </Text>
            <Text>
              A1-1
            </Text>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "paddingVertical": 8,
              }
            }
          >
            <Button
              backgroundColor="#0071e9"
              disabled={false}
              height={28}
              onPress={[Function]}
              radius={5}
              title="[missing \\"en.GENERICS.ADD\\" translation][missing \\"en.ITEM.TO_PICKLIST\\" translation]"
              titleColor="#0071e9"
              titleFontSize={12}
              titleFontWeight="bold"
              type={3}
              width={-1}
            />
          </View>
        </View>
      </SFTCard>
      <SFTCard
        bottomRightBtnAction={
          Array [
            [Function],
          ]
        }
        bottomRightBtnTxt={
          Array [
            "[missing \\"en.ITEM.TOGGLE_GRAPH\\" translation]",
          ]
        }
        subTitle="[missing \\"en.GENERICS.UPDATED\\" translation] 星期三, 7月 15 08:02 早上"
        title="[missing \\"en.ITEM.SALES_METRICS\\" translation]"
      >
        <SalesMetrics
          isGraphView={false}
          itemDetails={
            Object {
              "backroomQty": 6,
              "basePrice": 15.05,
              "categoryDesc": "Meat PI",
              "categoryNbr": 93,
              "claimsOnHandQty": 5,
              "cloudQty": undefined,
              "code": 200,
              "color": "red",
              "completed": false,
              "consolidatedOnHandQty": 10,
              "deliveryHistory": Object {
                "deliveries": Array [
                  Object {
                    "date": "2022-06-23",
                    "qty": 23,
                  },
                  Object {
                    "date": "2022-07-25",
                    "qty": 44,
                  },
                  Object {
                    "date": "2022-07-26",
                    "qty": 23,
                  },
                ],
              },
              "exceptionType": "nsfl",
              "grossProfit": 2.5,
              "imageBlobKey": undefined,
              "imageUrlKey": undefined,
              "itemName": "Test Item That is Really, Really Long (and has parenthesis)",
              "itemNbr": 1234567890,
              "location": Object {
                "count": 5,
                "floor": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Sales Floor",
                    "typeNbr": 8,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 0,
                    "aisleName": "1",
                    "locationName": "A1-2",
                    "sectionId": 2,
                    "sectionName": "2",
                    "type": "End Cap",
                    "typeNbr": 12,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-3",
                    "sectionId": 3,
                    "sectionName": "3",
                    "type": "Pod",
                    "typeNbr": 13,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-4",
                    "sectionId": 4,
                    "sectionName": "4",
                    "type": "Display",
                    "typeNbr": 11,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
                "reserve": Array [
                  Object {
                    "aisleId": 1,
                    "aisleName": "1",
                    "locationName": "A1-1",
                    "qty": 10,
                    "sectionId": 1,
                    "sectionName": "1",
                    "type": "Reserve",
                    "typeNbr": 7,
                    "zoneId": 0,
                    "zoneName": "A",
                  },
                ],
              },
              "margin": 14,
              "onHandsQty": 42,
              "pendingOnHandsQty": -999,
              "price": 2000.94,
              "replenishment": Object {
                "onOrder": 48,
              },
              "sales": Object {
                "daily": Array [
                  Object {
                    "day": "2020-07-08",
                    "value": 100,
                  },
                  Object {
                    "day": "2020-07-09",
                    "value": 0,
                  },
                  Object {
                    "day": "2020-07-10",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-11",
                    "value": 10,
                  },
                  Object {
                    "day": "2020-07-12",
                    "value": 42,
                  },
                  Object {
                    "day": "2020-07-13",
                    "value": 5,
                  },
                  Object {
                    "day": "2020-07-14",
                    "value": 1,
                  },
                ],
                "dailyAvgSales": 15,
                "lastUpdateTs": "2020-07-15T08:02:17-05:00",
                "weekly": Array [
                  Object {
                    "value": 39,
                    "week": 51,
                  },
                  Object {
                    "value": 26,
                    "week": 52,
                  },
                  Object {
                    "value": 45,
                    "week": 53,
                  },
                  Object {
                    "value": 34,
                    "week": 54,
                  },
                  Object {
                    "value": 34,
                    "week": 55,
                  },
                ],
                "weeklyAvgSales": 10,
              },
              "size": 88,
              "status": "Active",
              "upcNbr": "000055559999",
              "vendorPackQty": 33,
            }
          }
        />
      </SFTCard>
    </View>
  </ScrollView>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0071e9",
        "borderColor": "#0071e9",
        "borderRadius": 4,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 40,
        "justifyContent": "center",
        "marginHorizontal": 15,
        "marginVertical": 10,
        "paddingVertical": 10,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
    <Text
      style={
        Object {
          "color": "#ffffffff",
          "marginLeft": 10,
          "textAlign": "center",
        }
      }
    >
      [missing "en.ITEM.SCAN_FOR_NO_ACTION" translation]
    </Text>
  </TouchableOpacity>
</View>
`;
