// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the BinningScreen with Selected Pallets 1`] = `
<KeyboardAvoidingView
  behavior="height"
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <View>
        <Text
          style={
            Object {
              "color": "#f44336",
              "fontSize": 18,
              "paddingBottom": 5,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_LABEL" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 16,
              "padding": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_DESCRIPTION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "elevation": 10,
            "flexDirection": "row",
            "height": 80,
            "justifyContent": "space-evenly",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="cancelBack"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="confirmBack"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SCAN_PALLET_BIN" translation]
      </Text>
      <ItemSeparator />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <Memo(Pressable)
          disabled={false}
          onPress={[Function]}
          testID="camScan"
        >
          <Icon
            color="#000000"
            name="barcode-scan"
            size={100}
          />
        </Memo(Pressable)>
        <View
          style={
            Object {
              "paddingTop": 30,
            }
          }
        >
          <Text>
            [missing "en.BINNING.SCAN_PALLET" translation]
          </Text>
        </View>
      </View>
    </View>
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the BinningScreen with Successful getPalletApi state 1`] = `
<KeyboardAvoidingView
  behavior="height"
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <View>
        <Text
          style={
            Object {
              "color": "#f44336",
              "fontSize": 18,
              "paddingBottom": 5,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_LABEL" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 16,
              "padding": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_DESCRIPTION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "elevation": 10,
            "flexDirection": "row",
            "height": 80,
            "justifyContent": "space-evenly",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="cancelBack"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="confirmBack"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SCAN_PALLET_BIN" translation]
      </Text>
      <ItemSeparator />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <Memo(Pressable)
          disabled={false}
          onPress={[Function]}
          testID="camScan"
        >
          <Icon
            color="#000000"
            name="barcode-scan"
            size={100}
          />
        </Memo(Pressable)>
        <View
          style={
            Object {
              "paddingTop": 30,
            }
          }
        >
          <Text>
            [missing "en.BINNING.SCAN_PALLET" translation]
          </Text>
        </View>
      </View>
    </View>
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the default BinningScreen  1`] = `
<KeyboardAvoidingView
  behavior="height"
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <View>
        <Text
          style={
            Object {
              "color": "#f44336",
              "fontSize": 18,
              "paddingBottom": 5,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_LABEL" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 16,
              "padding": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_DESCRIPTION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "elevation": 10,
            "flexDirection": "row",
            "height": 80,
            "justifyContent": "space-evenly",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="cancelBack"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="confirmBack"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View
      style={
        Object {
          "borderColor": "#9e9e9e",
          "borderWidth": 1,
          "flex": 0.25,
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SINGLE_BIN_ENABLED" translation]
      </Text>
      <ForwardRef(Switch)
        onChange={[Function]}
        thumbColor="#f4f3f4"
        trackColor={
          Object {
            "false": "#0071e9",
            "true": "#33691E",
          }
        }
        value={false}
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <Memo(Pressable)
          disabled={false}
          onPress={[Function]}
          testID="camScan"
        >
          <Icon
            color="#000000"
            name="barcode-scan"
            size={100}
          />
        </Memo(Pressable)>
        <View
          style={
            Object {
              "paddingTop": 30,
            }
          }
        >
          <Text>
            [missing "en.BINNING.SCAN_PALLET" translation]
          </Text>
        </View>
      </View>
    </View>
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component renders the binning item card 1`] = `
<TouchableOpacity
  onPress={[Function]}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 4,
          "flexDirection": "column",
          "margin": 10,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 5,
          }
        }
      >
        <Text>
          [missing "en.PALLET.PALLET_ID" translation]: 123456
        </Text>
      </View>
      <View>
        <Text>
          [missing "en.BINNING.FIRST_ITEM" translation]: itemDesc
        </Text>
      </View>
    </View>
  </View>
</TouchableOpacity>
`;

exports[`BinningScreen Tests rendering the BinningScreen component renders the binning screen in multiple bin mode 1`] = `
<KeyboardAvoidingView
  behavior="height"
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <View>
        <Text
          style={
            Object {
              "color": "#f44336",
              "fontSize": 18,
              "paddingBottom": 5,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_LABEL" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 16,
              "padding": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_DESCRIPTION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "elevation": 10,
            "flexDirection": "row",
            "height": 80,
            "justifyContent": "space-evenly",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="cancelBack"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="confirmBack"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View
      style={
        Object {
          "borderColor": "#9e9e9e",
          "borderWidth": 1,
          "flex": 0.25,
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.MULTIPLE_BIN_ENABLED" translation]
      </Text>
      <ForwardRef(Switch)
        onChange={[Function]}
        thumbColor="#f5dd4b"
        trackColor={
          Object {
            "false": "#0071e9",
            "true": "#33691E",
          }
        }
        value={true}
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <FlatList
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={
          <View
            style={
              Object {
                "alignItems": "center",
              }
            }
          >
            <Memo(Pressable)
              disabled={false}
              onPress={[Function]}
              testID="flatlistCamScan"
            >
              <Icon
                color="#000000"
                name="barcode-scan"
                size={100}
              />
            </Memo(Pressable)>
            <View
              style={
                Object {
                  "paddingTop": 30,
                }
              }
            >
              <Text>
                [missing "en.BINNING.SCAN_PALLET" translation]
              </Text>
            </View>
          </View>
        }
        contentContainerStyle={
          Object {
            "flex": 1,
            "justifyContent": "center",
          }
        }
        data={Array []}
        keyExtractor={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
      />
    </View>
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component renders the binning screen in multiple bin mode and several pallets scanned 1`] = `
<KeyboardAvoidingView
  behavior="height"
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <View>
        <Text
          style={
            Object {
              "color": "#f44336",
              "fontSize": 18,
              "paddingBottom": 5,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_LABEL" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 16,
              "padding": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_DESCRIPTION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "elevation": 10,
            "flexDirection": "row",
            "height": 80,
            "justifyContent": "space-evenly",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="cancelBack"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="confirmBack"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SCAN_PALLET_BIN" translation]
      </Text>
      <ItemSeparator />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <FlatList
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={
          <View
            style={
              Object {
                "alignItems": "center",
              }
            }
          >
            <Memo(Pressable)
              disabled={false}
              onPress={[Function]}
              testID="flatlistCamScan"
            >
              <Icon
                color="#000000"
                name="barcode-scan"
                size={100}
              />
            </Memo(Pressable)>
            <View
              style={
                Object {
                  "paddingTop": 30,
                }
              }
            >
              <Text>
                [missing "en.BINNING.SCAN_PALLET" translation]
              </Text>
            </View>
          </View>
        }
        contentContainerStyle={false}
        data={
          Array [
            Object {
              "expirationDate": "10/3/2022",
              "id": "123456",
              "items": Array [
                Object {
                  "itemDesc": "itemDesc",
                  "itemNbr": 351231,
                  "price": 123,
                  "quantity": 2,
                  "upcNbr": "12343534",
                },
              ],
            },
            Object {
              "expirationDate": "10/3/2022",
              "id": "345345",
              "items": Array [
                Object {
                  "itemDesc": "itemDesc",
                  "itemNbr": 351231,
                  "price": 123,
                  "quantity": 2,
                  "upcNbr": "345345",
                },
              ],
            },
          ]
        }
        keyExtractor={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
      />
    </View>
    <React.Fragment>
      <ItemSeparator />
      <Button
        backgroundColor="#0071e9"
        disabled={false}
        height={45}
        onPress={[Function]}
        radius={5}
        style={
          Object {
            "marginHorizontal": 15,
            "marginVertical": 10,
          }
        }
        testID="nextButton"
        title="[missing \\"en.GENERICS.NEXT\\" translation]"
        titleColor="#ffffffff"
        titleFontSize={16}
        titleFontWeight="normal"
        type={1}
        width={-1}
      />
    </React.Fragment>
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component renders the binning screen with unsaved warning modal 1`] = `
<KeyboardAvoidingView
  behavior="height"
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Popup"
    onClose={[Function]}
  >
    <React.Fragment>
      <View>
        <Text
          style={
            Object {
              "color": "#f44336",
              "fontSize": 18,
              "paddingBottom": 5,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_LABEL" translation]
        </Text>
        <Text
          style={
            Object {
              "fontSize": 16,
              "padding": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.BINNING.WARNING_DESCRIPTION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "center",
            "elevation": 10,
            "flexDirection": "row",
            "height": 80,
            "justifyContent": "space-evenly",
          }
        }
      >
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="cancelBack"
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#0071e9"
          titleFontSize={16}
          titleFontWeight="normal"
          type={2}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "alignSelf": "center",
              "margin": 10,
              "width": "40%",
            }
          }
          testID="confirmBack"
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View
      style={
        Object {
          "borderColor": "#9e9e9e",
          "borderWidth": 1,
          "flex": 0.25,
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Text
        style={
          Object {
            "alignSelf": "center",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.MULTIPLE_BIN_ENABLED" translation]
      </Text>
      <ForwardRef(Switch)
        onChange={[Function]}
        thumbColor="#f5dd4b"
        trackColor={
          Object {
            "false": "#0071e9",
            "true": "#33691E",
          }
        }
        value={true}
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <FlatList
        ItemSeparatorComponent={[Function]}
        ListEmptyComponent={
          <View
            style={
              Object {
                "alignItems": "center",
              }
            }
          >
            <Memo(Pressable)
              disabled={false}
              onPress={[Function]}
              testID="flatlistCamScan"
            >
              <Icon
                color="#000000"
                name="barcode-scan"
                size={100}
              />
            </Memo(Pressable)>
            <View
              style={
                Object {
                  "paddingTop": 30,
                }
              }
            >
              <Text>
                [missing "en.BINNING.SCAN_PALLET" translation]
              </Text>
            </View>
          </View>
        }
        contentContainerStyle={
          Object {
            "flex": 1,
            "justifyContent": "center",
          }
        }
        data={Array []}
        keyExtractor={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
      />
    </View>
  </View>
</KeyboardAvoidingView>
`;
