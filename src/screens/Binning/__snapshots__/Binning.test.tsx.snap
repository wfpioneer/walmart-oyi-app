// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BinningScreen Tests rendering binningItemCard component should match snapshot 1`] = `
<View>
  <View>
    <Text>
      Id: 123456
    </Text>
  </View>
  <View>
    <Text>
      First Item: itemDesc
    </Text>
    <ForwardRef
      style={
        Object {
          "paddingBottom": 5,
          "paddingLeft": 5,
          "paddingTop": 5,
        }
      }
    >
      <View>
        <mockConstructor
          color="#545F7A"
          name="trash-can"
          size={20}
        />
      </View>
    </ForwardRef>
  </View>
</View>
`;

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the BinningScreen with Selected Pallets 1`] = `
<KeyboardAvoidingView
  behavior="height"
  enabled={true}
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <CustomModalComponent
      animationType="none"
      isVisible={false}
      modalType="Popup"
      onClose={[Function]}
    >
      <React.Fragment>
        <View>
          <Text
            style={
              Object {
                "color": "#f44336",
                "fontSize": 18,
                "paddingBottom": 5,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_LABEL" translation]
          </Text>
          <Text
            style={
              Object {
                "fontSize": 16,
                "padding": 15,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_DESCRIPTION" translation]
          </Text>
        </View>
        <View
          style={
            Object {
              "alignContent": "center",
              "elevation": 10,
              "flexDirection": "row",
              "height": 80,
              "justifyContent": "space-evenly",
            }
          }
        >
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.CANCEL\\" translation]"
            titleColor="#0071e9"
            titleFontSize={16}
            titleFontWeight="normal"
            type={2}
            width={-1}
          />
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.OK\\" translation]"
            titleColor="#ffffffff"
            titleFontSize={16}
            titleFontWeight="normal"
            type={1}
            width={-1}
          />
        </View>
      </React.Fragment>
    </CustomModalComponent>
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SCAN_PALLET_BIN" translation]
      </Text>
      <ItemSeparator />
    </View>
    <ForwardRef
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "marginVertical": 80,
            }
          }
        >
          <ForwardRef
            onPress={[Function]}
          >
            <mockConstructor
              color="#000000"
              name="barcode-scan"
              size={100}
            />
          </ForwardRef>
          <View
            style={
              Object {
                "paddingTop": 30,
              }
            }
          >
            <Text>
              [missing "en.BINNING.SCAN_PALLET" translation]
            </Text>
          </View>
        </View>
      }
      data={
        Array [
          Object {
            "expirationDate": "10/3/2022",
            "firstItem": Object {
              "itemDesc": "itemDesc",
              "itemNbr": 351231,
              "price": 123,
              "quantity": 2,
              "upcNbr": "12343534",
            },
            "id": 123456,
          },
          Object {
            "expirationDate": "10/3/2022",
            "firstItem": Object {
              "itemDesc": "itemDesc",
              "itemNbr": 351231,
              "price": 123,
              "quantity": 2,
              "upcNbr": "345345",
            },
            "id": 345345,
          },
        ]
      }
      keyExtractor={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
    />
    <ItemSeparator />
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      radius={5}
      style={
        Object {
          "marginHorizontal": 15,
          "marginVertical": 10,
        }
      }
      title="[missing \\"en.GENERICS.NEXT\\" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the BinningScreen with Successful getPalletApi state 1`] = `
<KeyboardAvoidingView
  behavior="height"
  enabled={true}
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <CustomModalComponent
      animationType="none"
      isVisible={false}
      modalType="Popup"
      onClose={[Function]}
    >
      <React.Fragment>
        <View>
          <Text
            style={
              Object {
                "color": "#f44336",
                "fontSize": 18,
                "paddingBottom": 5,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_LABEL" translation]
          </Text>
          <Text
            style={
              Object {
                "fontSize": 16,
                "padding": 15,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_DESCRIPTION" translation]
          </Text>
        </View>
        <View
          style={
            Object {
              "alignContent": "center",
              "elevation": 10,
              "flexDirection": "row",
              "height": 80,
              "justifyContent": "space-evenly",
            }
          }
        >
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.CANCEL\\" translation]"
            titleColor="#0071e9"
            titleFontSize={16}
            titleFontWeight="normal"
            type={2}
            width={-1}
          />
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.OK\\" translation]"
            titleColor="#ffffffff"
            titleFontSize={16}
            titleFontWeight="normal"
            type={1}
            width={-1}
          />
        </View>
      </React.Fragment>
    </CustomModalComponent>
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SCAN_PALLET_BIN" translation]
      </Text>
      <ItemSeparator />
    </View>
    <ForwardRef
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "marginVertical": 80,
            }
          }
        >
          <ForwardRef
            onPress={[Function]}
          >
            <mockConstructor
              color="#000000"
              name="barcode-scan"
              size={100}
            />
          </ForwardRef>
          <View
            style={
              Object {
                "paddingTop": 30,
              }
            }
          >
            <Text>
              [missing "en.BINNING.SCAN_PALLET" translation]
            </Text>
          </View>
        </View>
      }
      data={
        Array [
          Object {
            "expirationDate": "10/3/2022",
            "firstItem": Object {
              "itemDesc": "itemDesc",
              "itemNbr": 351231,
              "price": 123,
              "quantity": 2,
              "upcNbr": "12343534",
            },
            "id": 123456,
          },
          Object {
            "expirationDate": "10/3/2022",
            "firstItem": Object {
              "itemDesc": "itemDesc",
              "itemNbr": 351231,
              "price": 123,
              "quantity": 2,
              "upcNbr": "345345",
            },
            "id": 345345,
          },
        ]
      }
      keyExtractor={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
    />
    <ItemSeparator />
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      radius={5}
      style={
        Object {
          "marginHorizontal": 15,
          "marginVertical": 10,
        }
      }
      title="[missing \\"en.GENERICS.NEXT\\" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the BinningScreen with warning Modal 1`] = `
<KeyboardAvoidingView
  behavior="height"
  enabled={true}
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <CustomModalComponent
      animationType="none"
      isVisible={true}
      modalType="Popup"
      onClose={[Function]}
    >
      <React.Fragment>
        <View>
          <Text
            style={
              Object {
                "color": "#f44336",
                "fontSize": 18,
                "paddingBottom": 5,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_LABEL" translation]
          </Text>
          <Text
            style={
              Object {
                "fontSize": 16,
                "padding": 15,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_DESCRIPTION" translation]
          </Text>
        </View>
        <View
          style={
            Object {
              "alignContent": "center",
              "elevation": 10,
              "flexDirection": "row",
              "height": 80,
              "justifyContent": "space-evenly",
            }
          }
        >
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.CANCEL\\" translation]"
            titleColor="#0071e9"
            titleFontSize={16}
            titleFontWeight="normal"
            type={2}
            width={-1}
          />
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.OK\\" translation]"
            titleColor="#ffffffff"
            titleFontSize={16}
            titleFontWeight="normal"
            type={1}
            width={-1}
          />
        </View>
      </React.Fragment>
    </CustomModalComponent>
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <View>
      <Text
        style={
          Object {
            "fontSize": 16,
            "margin": 15,
            "textAlign": "center",
          }
        }
      >
        [missing "en.BINNING.SCAN_PALLET_BIN" translation]
      </Text>
      <ItemSeparator />
    </View>
    <ForwardRef
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "marginVertical": 80,
            }
          }
        >
          <ForwardRef
            onPress={[Function]}
          >
            <mockConstructor
              color="#000000"
              name="barcode-scan"
              size={100}
            />
          </ForwardRef>
          <View
            style={
              Object {
                "paddingTop": 30,
              }
            }
          >
            <Text>
              [missing "en.BINNING.SCAN_PALLET" translation]
            </Text>
          </View>
        </View>
      }
      data={
        Array [
          Object {
            "expirationDate": "10/3/2022",
            "firstItem": Object {
              "itemDesc": "itemDesc",
              "itemNbr": 351231,
              "price": 123,
              "quantity": 2,
              "upcNbr": "12343534",
            },
            "id": 123456,
          },
          Object {
            "expirationDate": "10/3/2022",
            "firstItem": Object {
              "itemDesc": "itemDesc",
              "itemNbr": 351231,
              "price": 123,
              "quantity": 2,
              "upcNbr": "345345",
            },
            "id": 345345,
          },
        ]
      }
      keyExtractor={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
    />
    <ItemSeparator />
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      radius={5}
      style={
        Object {
          "marginHorizontal": 15,
          "marginVertical": 10,
        }
      }
      title="[missing \\"en.GENERICS.NEXT\\" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</KeyboardAvoidingView>
`;

exports[`BinningScreen Tests rendering the BinningScreen component Test renders the default BinningScreen  1`] = `
<KeyboardAvoidingView
  behavior="height"
  enabled={true}
  keyboardVerticalOffset={110}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <CustomModalComponent
      animationType="none"
      isVisible={false}
      modalType="Popup"
      onClose={[Function]}
    >
      <React.Fragment>
        <View>
          <Text
            style={
              Object {
                "color": "#f44336",
                "fontSize": 18,
                "paddingBottom": 5,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_LABEL" translation]
          </Text>
          <Text
            style={
              Object {
                "fontSize": 16,
                "padding": 15,
                "textAlign": "center",
              }
            }
          >
            [missing "en.BINNING.WARNING_DESCRIPTION" translation]
          </Text>
        </View>
        <View
          style={
            Object {
              "alignContent": "center",
              "elevation": 10,
              "flexDirection": "row",
              "height": 80,
              "justifyContent": "space-evenly",
            }
          }
        >
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.CANCEL\\" translation]"
            titleColor="#0071e9"
            titleFontSize={16}
            titleFontWeight="normal"
            type={2}
            width={-1}
          />
          <Button
            backgroundColor="#0071e9"
            disabled={false}
            height={45}
            onPress={[Function]}
            radius={5}
            style={
              Object {
                "alignSelf": "center",
                "margin": 10,
                "width": "40%",
              }
            }
            title="[missing \\"en.GENERICS.OK\\" translation]"
            titleColor="#ffffffff"
            titleFontSize={16}
            titleFontWeight="normal"
            type={1}
            width={-1}
          />
        </View>
      </React.Fragment>
    </CustomModalComponent>
    <ManualScanComponent
      keyboardType="numeric"
      placeholder="[missing \\"en.PALLET.ENTER_PALLET_ID\\" translation]"
    />
    <ForwardRef
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "marginVertical": 80,
            }
          }
        >
          <ForwardRef
            onPress={[Function]}
          >
            <mockConstructor
              color="#000000"
              name="barcode-scan"
              size={100}
            />
          </ForwardRef>
          <View
            style={
              Object {
                "paddingTop": 30,
              }
            }
          >
            <Text>
              [missing "en.BINNING.SCAN_PALLET" translation]
            </Text>
          </View>
        </View>
      }
      data={Array []}
      keyExtractor={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
    />
    <ItemSeparator />
    <Button
      backgroundColor="#0071e9"
      disabled={true}
      height={45}
      radius={5}
      style={
        Object {
          "marginHorizontal": 15,
          "marginVertical": 10,
        }
      }
      title="[missing \\"en.GENERICS.NEXT\\" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</KeyboardAvoidingView>
`;
