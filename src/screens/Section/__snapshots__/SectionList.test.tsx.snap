// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering Remove Aisle responses Renders the success response from Remove Aisle 1`] = `
<View>
  <ApiConfirmationModal
    api={
      {
        "error": null,
        "isWaiting": false,
        "result": {
          "data": "",
          "status": 204,
        },
        "value": null,
      }
    }
    cancelText={null}
    confirmText={null}
    errorText={null}
    handleConfirm={[Function]}
    isVisible={false}
    mainText="[missing "en.LOCATION.REMOVE_AISLE_CONFIRMATION" translation]"
    onClose={[Function]}
    subtext1="[missing "en.LOCATION.REMOVE_AISLE_WILL_REMOVE_SECTIONS" translation]"
    subtext2={null}
  />
  <ClearItemsModal
    clearAisleApi={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    clearLocationTarget="items"
    displayConfirmation={false}
    handleClearItems={[Function]}
    isClearAisle={false}
    setClearLocationTarget={[MockFunction]}
    setDisplayConfirmation={[MockFunction]}
  />
  <LocationHeader
    details="0 [missing "en.LOCATION.SECTIONS" translation]"
    isDisabled={false}
    location="[missing "en.LOCATION.AISLE" translation] CARN1"
  />
  <FlatList
    ListEmptyComponent={<NoSectionMessage />}
    contentContainerStyle={
      {
        "paddingBottom": 100,
      }
    }
    data={[]}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Rendering Remove Aisle responses Renders the waiting for response from Remove Aisle 1`] = `
<View>
  <ApiConfirmationModal
    api={
      {
        "error": null,
        "isWaiting": true,
        "result": null,
        "value": null,
      }
    }
    cancelText={null}
    confirmText={null}
    errorText={null}
    handleConfirm={[Function]}
    isVisible={false}
    mainText="[missing "en.LOCATION.REMOVE_AISLE_CONFIRMATION" translation]"
    onClose={[Function]}
    subtext1="[missing "en.LOCATION.REMOVE_AISLE_WILL_REMOVE_SECTIONS" translation]"
    subtext2={null}
  />
  <ClearItemsModal
    clearAisleApi={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    clearLocationTarget="items"
    displayConfirmation={false}
    handleClearItems={[Function]}
    isClearAisle={false}
    setClearLocationTarget={[MockFunction]}
    setDisplayConfirmation={[MockFunction]}
  />
  <LocationHeader
    details="0 [missing "en.LOCATION.SECTIONS" translation]"
    isDisabled={false}
    location="[missing "en.LOCATION.AISLE" translation] CARN1"
  />
  <FlatList
    ListEmptyComponent={<NoSectionMessage />}
    contentContainerStyle={
      {
        "paddingBottom": 100,
      }
    }
    data={[]}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Rendering clear Aisle responses Ensures the clearAisleModal does not show when not clear aisle 1`] = `
<CustomModalComponent
  animationType="none"
  isVisible={false}
  modalType="Error"
  onClose={[Function]}
>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 18,
          "paddingBottom": 5,
          "paddingHorizontal": 15,
          "paddingTop": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_CONFIRMATION" translation]
    </Text>
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_CHOOSE_SF_OR_RESERVE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.FLOOR" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.RESERVE" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.ALL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_WONT_DELETE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.CANCEL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#D6512D"
      disabled={false}
      height={45}
      onPress={[MockFunction]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.OK" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</CustomModalComponent>
`;

exports[`Rendering clear Aisle responses Renders the failed response from clear aisle 1`] = `
<CustomModalComponent
  animationType="none"
  isVisible={true}
  modalType="Error"
  onClose={[Function]}
>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <mockConstructor
      color="#f44336"
      name="alert"
      size={30}
      style={
        {
          "alignSelf": "center",
        }
      }
    />
    <Text
      style={
        {
          "fontSize": 18,
          "paddingBottom": 5,
          "paddingHorizontal": 15,
          "paddingTop": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_FAIL" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.FLOOR" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.RESERVE" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.ALL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_WONT_DELETE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.CANCEL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#D6512D"
      disabled={false}
      height={45}
      onPress={[MockFunction]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.OK" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</CustomModalComponent>
`;

exports[`Rendering clear Aisle responses Renders the preflight view of clearAisleModal 1`] = `
<CustomModalComponent
  animationType="none"
  isVisible={true}
  modalType="Error"
  onClose={[Function]}
>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 18,
          "paddingBottom": 5,
          "paddingHorizontal": 15,
          "paddingTop": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_CONFIRMATION" translation]
    </Text>
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_CHOOSE_SF_OR_RESERVE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.FLOOR" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.RESERVE" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.ALL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_WONT_DELETE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.CANCEL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#D6512D"
      disabled={false}
      height={45}
      onPress={[MockFunction]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.OK" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</CustomModalComponent>
`;

exports[`Rendering clear Aisle responses Renders the success response from clear Aisle 1`] = `
<CustomModalComponent
  animationType="none"
  isVisible={true}
  modalType="Error"
  onClose={[Function]}
>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 18,
          "paddingBottom": 5,
          "paddingHorizontal": 15,
          "paddingTop": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_CONFIRMATION" translation]
    </Text>
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_CHOOSE_SF_OR_RESERVE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.FLOOR" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.ITEM.RESERVE" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#545F7A"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.ALL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
  <View
    style={
      {
        "flexDirection": "column",
      }
    }
  >
    <Text
      style={
        {
          "fontSize": 14,
          "paddingBottom": 15,
          "paddingHorizontal": 15,
          "textAlign": "center",
        }
      }
    >
      [missing "en.LOCATION.CLEAR_AISLE_ITEMS_WONT_DELETE" translation]
    </Text>
  </View>
  <View
    style={
      {
        "alignContent": "space-around",
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[Function]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.CANCEL" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
    <Button
      backgroundColor="#D6512D"
      disabled={false}
      height={45}
      onPress={[MockFunction]}
      radius={5}
      style={
        {
          "flex": 1,
          "paddingHorizontal": 10,
        }
      }
      title="[missing "en.GENERICS.OK" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</CustomModalComponent>
`;

exports[`Test Get Section Api Response Renders Error Message when result is 400 error 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "width": "95%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`Test Get Section Api Response Renders Error Message when result is 424 error 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "width": "95%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`Test Get Section Api Response Renders Error Message when result is 500 error 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "width": "95%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`Test Get Section Api Response Renders Error Message when result is network error 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "width": "95%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`Test Get Section Api Response Renders Error Message when result is timeout error 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <mockConstructor
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <TouchableOpacity
    onPress={[Function]}
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "width": "95%",
      }
    }
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </TouchableOpacity>
</View>
`;

exports[`Test Get Section Api Response Renders loading indicator when waiting for Section Api response 1`] = `
<ActivityIndicator
  animating={true}
  color="#0071e9"
  hidesWhenStopped={true}
  size="large"
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
/>
`;

exports[`Test Section List Renders Manual Scan Component when isManualScanEnabled is set to true 1`] = `
<View>
  <ApiConfirmationModal
    api={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    cancelText={null}
    confirmText={null}
    errorText={null}
    handleConfirm={[Function]}
    isVisible={false}
    mainText="[missing "en.LOCATION.REMOVE_AISLE_CONFIRMATION" translation]"
    onClose={[Function]}
    subtext1="[missing "en.LOCATION.REMOVE_AISLE_WILL_REMOVE_SECTIONS" translation]"
    subtext2={null}
  />
  <ClearItemsModal
    clearAisleApi={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    clearLocationTarget="items"
    displayConfirmation={false}
    handleClearItems={[Function]}
    isClearAisle={false}
    setClearLocationTarget={[MockFunction]}
    setDisplayConfirmation={[MockFunction]}
  />
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    details="0 [missing "en.LOCATION.SECTIONS" translation]"
    isDisabled={false}
    location="[missing "en.LOCATION.AISLE" translation] CARN1"
  />
  <FlatList
    ListEmptyComponent={<NoSectionMessage />}
    contentContainerStyle={
      {
        "paddingBottom": 100,
      }
    }
    data={[]}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Test Section List Renders Section Screen with Data 1`] = `
<View>
  <ApiConfirmationModal
    api={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    cancelText={null}
    confirmText={null}
    errorText={null}
    handleConfirm={[Function]}
    isVisible={false}
    mainText="[missing "en.LOCATION.REMOVE_AISLE_CONFIRMATION" translation]"
    onClose={[Function]}
    subtext1="[missing "en.LOCATION.REMOVE_AISLE_WILL_REMOVE_SECTIONS" translation]"
    subtext2={null}
  />
  <ClearItemsModal
    clearAisleApi={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    clearLocationTarget="items"
    displayConfirmation={false}
    handleClearItems={[Function]}
    isClearAisle={false}
    setClearLocationTarget={[MockFunction]}
    setDisplayConfirmation={[MockFunction]}
  />
  <LocationHeader
    details="6 [missing "en.LOCATION.SECTIONS" translation]"
    isDisabled={false}
    location="[missing "en.LOCATION.AISLE" translation] CARN1"
  />
  <FlatList
    ListEmptyComponent={<NoSectionMessage />}
    contentContainerStyle={
      {
        "paddingBottom": 100,
      }
    }
    data={
      [
        {
          "sectionId": 1,
          "sectionName": "Section ABAR1-1",
        },
        {
          "sectionId": 2,
          "sectionName": "Section ABAR1-2",
        },
        {
          "sectionId": 3,
          "sectionName": "Section ABAR1-3",
        },
        {
          "sectionId": 4,
          "sectionName": "Section ABAR1-4",
        },
        {
          "sectionId": 5,
          "sectionName": "Section ABAR1-5",
        },
        {
          "sectionId": 6,
          "sectionName": "Section ABAR1-6",
        },
      ]
    }
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;

exports[`Test Section List Renders Section Screen with no-section-message when getSections response is 204 1`] = `
<View>
  <ApiConfirmationModal
    api={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    cancelText={null}
    confirmText={null}
    errorText={null}
    handleConfirm={[Function]}
    isVisible={false}
    mainText="[missing "en.LOCATION.REMOVE_AISLE_CONFIRMATION" translation]"
    onClose={[Function]}
    subtext1="[missing "en.LOCATION.REMOVE_AISLE_WILL_REMOVE_SECTIONS" translation]"
    subtext2={null}
  />
  <ClearItemsModal
    clearAisleApi={
      {
        "error": null,
        "isWaiting": false,
        "result": null,
        "value": null,
      }
    }
    clearLocationTarget="items"
    displayConfirmation={false}
    handleClearItems={[Function]}
    isClearAisle={false}
    setClearLocationTarget={[MockFunction]}
    setDisplayConfirmation={[MockFunction]}
  />
  <LocationHeader
    details="0 [missing "en.LOCATION.SECTIONS" translation]"
    isDisabled={false}
    location="[missing "en.LOCATION.AISLE" translation] CARN1"
  />
  <FlatList
    ListEmptyComponent={<NoSectionMessage />}
    contentContainerStyle={
      {
        "paddingBottom": 100,
      }
    }
    data={[]}
    keyExtractor={[Function]}
    renderItem={[Function]}
  />
</View>
`;
