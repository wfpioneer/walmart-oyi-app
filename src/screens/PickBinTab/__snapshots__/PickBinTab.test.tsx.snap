// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component with AssignedToMe List and zone 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    disableVirtualization={false}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onEndReachedThreshold={2}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    updateCellsBatchingPeriod={50}
    windowSize={21}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#eeeeee",
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.PICKING.SCAN_ITEM_LABEL" translation]
    </Text>
  </View>
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component without AssignedToMe List and zone 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    disableVirtualization={false}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onEndReachedThreshold={2}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    updateCellsBatchingPeriod={50}
    windowSize={21}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#eeeeee",
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.PICKING.SCAN_ITEM_LABEL" translation]
    </Text>
  </View>
</ForwardRef(SafeAreaView)>
`;
