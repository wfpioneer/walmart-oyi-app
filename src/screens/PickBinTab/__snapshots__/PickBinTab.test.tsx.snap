// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders PickBinTabScreen component with multi bin enabled and atleast 1 bin ready to start 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[Function]}
    refreshing={false}
    renderItem={[Function]}
  />
  <ButtonBottomTab
    leftTitle="[missing \\"en.GENERICS.CANCEL\\" translation]"
    onLeftPress={[Function]}
    onRightPress={[Function]}
    rightTitle="[missing \\"en.GENERICS.CONTINUE\\" translation]"
  />
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders PickBinTabScreen component with multi pick enabled and atleast 1 pick ready to start 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[Function]}
    refreshing={false}
    renderItem={[Function]}
  />
  <ButtonBottomTab
    leftTitle="[missing \\"en.GENERICS.CANCEL\\" translation]"
    onLeftPress={[Function]}
    onRightPress={[Function]}
    rightTitle="[missing \\"en.GENERICS.CONTINUE\\" translation]"
  />
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component while refreshing 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[Function]}
    refreshing={true}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#eeeeee",
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.PICKING.SCAN_ITEM_LABEL" translation]
    </Text>
  </View>
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component with "cancel & continue" buttons if multiPick/multiBin is enabled 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[MockFunction]}
    refreshing={false}
    renderItem={[Function]}
  />
  <ButtonBottomTab
    leftTitle="[missing \\"en.GENERICS.CANCEL\\" translation]"
    onLeftPress={[Function]}
    onRightPress={[Function]}
    rightTitle="[missing \\"en.GENERICS.CONTINUE\\" translation]"
  />
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component with AssignedToMe List and zone 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[Function]}
    refreshing={false}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#eeeeee",
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.PICKING.SCAN_ITEM_LABEL" translation]
    </Text>
  </View>
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component with accept multiPick and multiBin buttons 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[MockFunction]}
    refreshing={false}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#eeeeee",
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.PICKING.SCAN_ITEM_LABEL" translation]
    </Text>
  </View>
</ForwardRef(SafeAreaView)>
`;

exports[`PickBinTabScreen Tests rendering the PickBinTabScreen component Test renders the PickBinTabScreen component without AssignedToMe List and zone 1`] = `
<ForwardRef(SafeAreaView)
  style={
    Object {
      "backgroundColor": "#ffffffff",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <FlatList
    data={
      Array [
        "assignedToMe",
        "BREW",
        "C",
      ]
    }
    keyExtractor={[Function]}
    onRefresh={[MockFunction]}
    refreshing={false}
    renderItem={[Function]}
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#eeeeee",
        "padding": 10,
      }
    }
  >
    <Text>
      [missing "en.PICKING.SCAN_ITEM_LABEL" translation]
    </Text>
  </View>
</ForwardRef(SafeAreaView)>
`;
