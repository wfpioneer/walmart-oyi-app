// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test createPickDialog Component Renders the createPickDialog component with location moveToFront selected 1`] = `
<View>
  <View
    style={
      Object {
        "alignContent": "flex-start",
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "flex-end",
        "width": "100%",
      }
    }
  >
    <IconButton
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      icon={
        <mockMaterialCommunityIcons
          color="#9e9e9e"
          name="close"
          size={16}
        />
      }
      onPress={[Function]}
      radius={5}
      testID="closeButton"
      type={3}
      width={-1}
    />
  </View>
  <Text
    style={
      Object {
        "fontSize": 18,
        "textAlign": "center",
      }
    }
  >
    [missing "en.PICKING.SELECT_LOCATION" translation]
  </Text>
  <View
    style={
      Object {
        "borderColor": "#c5c5c5",
        "borderRadius": 10,
        "borderWidth": 1,
        "marginBottom": 10,
        "marginHorizontal": 20,
      }
    }
  >
    <Picker
      mode="dropdown"
      onValueChange={[Function]}
      selectedValue="moveToFront"
    >
      <PickerItem
        label="[missing \\"en.PICKING.SELECT_LOCATION\\" translation]"
        value=""
      />
      <PickerItem
        label="[missing \\"en.PICKING.MOVE_TO_FRONT\\" translation]"
        value="moveToFront"
      />
    </Picker>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "marginBottom": 10,
        "textAlign": "center",
      }
    }
  >
    <Text>
      [missing "en.PICKING.NUMBER_PALLETS" translation]
    </Text>
    <NumericSelector
      isValid={true}
      maxValue={99}
      minValue={1}
      onDecreaseQty={[Function]}
      onIncreaseQty={[Function]}
      onTextChange={[Function]}
      value={1}
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 20,
        "marginHorizontal": 20,
        "marginTop": 10,
        "paddingHorizontal": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 18,
        }
      }
    >
      [missing "en.PICKING.QUICK_PICK" translation]
    </Text>
    <Switch
      onValueChange={[Function]}
      testID="quickPickSwitch"
      thumbColor="#0071e9"
      trackColor={
        Object {
          "false": "#c5c5c5",
          "true": "#0071e9",
        }
      }
      value={false}
    />
  </View>
  <View
    style={
      Object {
        "marginHorizontal": 20,
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      onPress={[MockFunction]}
      radius={5}
      testID="submitButton"
      title="[missing \\"en.PICKING.CREATE_PICK\\" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</View>
`;

exports[`Test createPickDialog Component Renders the createPickDialog component with location other than moveToFront selected 1`] = `
<View>
  <View
    style={
      Object {
        "alignContent": "flex-start",
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "flex-end",
        "width": "100%",
      }
    }
  >
    <IconButton
      backgroundColor="#0071e9"
      disabled={false}
      height={45}
      icon={
        <mockMaterialCommunityIcons
          color="#9e9e9e"
          name="close"
          size={16}
        />
      }
      onPress={[Function]}
      radius={5}
      testID="closeButton"
      type={3}
      width={-1}
    />
  </View>
  <Text
    style={
      Object {
        "fontSize": 18,
        "textAlign": "center",
      }
    }
  >
    [missing "en.PICKING.SELECT_LOCATION" translation]
  </Text>
  <View
    style={
      Object {
        "borderColor": "#c5c5c5",
        "borderRadius": 10,
        "borderWidth": 1,
        "marginBottom": 10,
        "marginHorizontal": 20,
      }
    }
  >
    <Picker
      mode="dropdown"
      onValueChange={[Function]}
      selectedValue=""
    >
      <PickerItem
        label="[missing \\"en.PICKING.SELECT_LOCATION\\" translation]"
        value=""
      />
      <PickerItem
        label="[missing \\"en.PICKING.MOVE_TO_FRONT\\" translation]"
        value="moveToFront"
      />
    </Picker>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "marginBottom": 20,
        "marginHorizontal": 20,
        "marginTop": 10,
        "paddingHorizontal": 10,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 18,
        }
      }
    >
      [missing "en.PICKING.QUICK_PICK" translation]
    </Text>
    <Switch
      onValueChange={[Function]}
      testID="quickPickSwitch"
      thumbColor="#0071e9"
      trackColor={
        Object {
          "false": "#c5c5c5",
          "true": "#0071e9",
        }
      }
      value={false}
    />
  </View>
  <View
    style={
      Object {
        "marginHorizontal": 20,
      }
    }
  >
    <Button
      backgroundColor="#0071e9"
      disabled={true}
      height={45}
      onPress={[MockFunction]}
      radius={5}
      testID="submitButton"
      title="[missing \\"en.PICKING.CREATE_PICK\\" translation]"
      titleColor="#ffffffff"
      titleFontSize={16}
      titleFontWeight="normal"
      type={1}
      width={-1}
    />
  </View>
</View>
`;
