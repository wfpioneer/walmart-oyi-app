// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListGroup Tests CollapsibleCard Component should tests CollapsibleCard when the card is closed 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#5a9ae0",
      "borderBottomWidth": 1,
      "flexDirection": "row",
      "padding": 10,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "flex-start",
      }
    }
  >
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 16,
        }
      }
    >
      ABAR-1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="collapsible-card"
  >
    <Icon
      color="#000000"
      name="keyboard-arrow-down"
      size={25}
    />
  </View>
</View>
`;

exports[`ListGroup Tests CollapsibleCard Component should tests CollapsibleCard when the card is opened 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#5a9ae0",
      "borderBottomWidth": 1,
      "flexDirection": "row",
      "padding": 10,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "flex-start",
      }
    }
  >
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 16,
        }
      }
    >
      ABAR-1
    </Text>
  </View>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="collapsible-card"
  >
    <Icon
      color="#000000"
      name="keyboard-arrow-up"
      size={25}
    />
  </View>
</View>
`;

exports[`ListGroup Tests CollapsibleCard Component should tests CollapsibleCard with showCheckboxSel is true 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#5a9ae0",
      "borderBottomWidth": 1,
      "flexDirection": "row",
      "paddingVertical": 5,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "flex-start",
      }
    }
  >
    <withTheme(Checkbox)
      color="#0039a9"
      onPress={[Function]}
      status="unchecked"
      uncheckedColor="#0039a9"
    />
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 16,
        }
      }
    >
      ABAR-1
    </Text>
  </View>
  <TouchableOpacity
    onPress={[Function]}
    style={
      Object {
        "paddingRight": 10,
      }
    }
    testID="collapsible-card"
  >
    <Icon
      color="#000000"
      name="keyboard-arrow-down"
      size={25}
    />
  </TouchableOpacity>
</View>
`;

exports[`ListGroup Tests rendering the ListGroup component Test renders the ListGroup component with groupItems and multiBinEnabled as true 1`] = `
<View>
  <CollapsibleCard
    dispatch={[MockFunction]}
    isOpened={true}
    pickListWithStatusReady={
      Array [
        Object {
          "assignedAssociate": "",
          "category": 46,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Associate 2",
          "id": 4,
          "itemDesc": "Candy",
          "itemNbr": 7344,
          "moveToFront": true,
          "palletId": "4321",
          "palletLocationId": 1672,
          "palletLocationName": "C1-2-1",
          "quickPick": false,
          "salesFloorLocationId": 1673,
          "salesFloorLocationName": "C1-3",
          "status": "ready to bin",
          "upcNbr": "000041800004",
        },
      ]
    }
    showCheckboxSel={true}
    title="ABAR-2"
    toggleIsOpened={[Function]}
  />
  <View>
    <FlatList
      data={
        Array [
          "5432",
          "4321",
        ]
      }
      keyExtractor={[Function]}
      renderItem={[Function]}
      scrollEnabled={false}
    />
  </View>
</View>
`;

exports[`ListGroup Tests rendering the ListGroup component Test renders the ListGroup component with groupItems and multiPickEnabled as true 1`] = `
<View>
  <CollapsibleCard
    dispatch={[MockFunction]}
    isOpened={true}
    pickListWithStatusReady={
      Array [
        Object {
          "assignedAssociate": "",
          "category": 46,
          "createTs": "2022-04-03T12:55:31.9633333Z",
          "createdBy": "Associate 2",
          "id": 4,
          "itemDesc": "Candy",
          "itemNbr": 7344,
          "moveToFront": true,
          "palletId": "4321",
          "palletLocationId": 1672,
          "palletLocationName": "C1-2-1",
          "quickPick": false,
          "salesFloorLocationId": 1673,
          "salesFloorLocationName": "C1-3",
          "status": "ready to pick",
          "upcNbr": "000041800004",
        },
      ]
    }
    showCheckboxSel={true}
    title="ABAR-2"
    toggleIsOpened={[Function]}
  />
  <View>
    <FlatList
      data={
        Array [
          "5432",
          "4321",
        ]
      }
      keyExtractor={[Function]}
      renderItem={[Function]}
      scrollEnabled={false}
    />
  </View>
</View>
`;

exports[`ListGroup Tests rendering the ListGroup component Test renders the ListGroup component with groupItems prop as false 1`] = `
<View>
  <CollapsibleCard
    dispatch={[MockFunction]}
    isOpened={true}
    pickListWithStatusReady={Array []}
    showCheckboxSel={false}
    title="ABAR-2"
    toggleIsOpened={[Function]}
  />
  <View>
    <FlatList
      data={
        Array [
          Object {
            "assignedAssociate": "Associate 1",
            "category": 71,
            "createTs": "2022-02-09T12:55:31.9633333Z",
            "createdBy": "Manager 1",
            "id": 3,
            "itemDesc": "Swiffer",
            "itemNbr": 845,
            "moveToFront": true,
            "palletId": "5432",
            "palletLocationId": 2345,
            "palletLocationName": "BREW1-2",
            "quickPick": false,
            "salesFloorLocationId": 2345,
            "salesFloorLocationName": "BREW1-2",
            "status": "accepted pick",
            "upcNbr": "000052900004",
          },
          Object {
            "assignedAssociate": "Associate 1",
            "category": 71,
            "createTs": "2022-04-02T12:55:31.9633333Z",
            "createdBy": "Associate 1",
            "id": 418,
            "itemDesc": "Teapot",
            "itemNbr": 734,
            "moveToFront": true,
            "palletId": "4321",
            "palletLocationId": 1672,
            "palletLocationName": "C1-2",
            "quickPick": false,
            "salesFloorLocationId": 1673,
            "salesFloorLocationName": "C1-3",
            "status": "accepted pick",
            "upcNbr": "000041800003",
          },
        ]
      }
      keyExtractor={[Function]}
      renderItem={[Function]}
      scrollEnabled={false}
    />
  </View>
</View>
`;

exports[`ListGroup Tests rendering the ListGroup component Test renders the ListGroup component with groupItems prop as true 1`] = `
<View>
  <CollapsibleCard
    dispatch={[MockFunction]}
    isOpened={true}
    pickListWithStatusReady={Array []}
    showCheckboxSel={false}
    title="ABAR-2"
    toggleIsOpened={[Function]}
  />
  <View>
    <FlatList
      data={
        Array [
          "5432",
          "4321",
        ]
      }
      keyExtractor={[Function]}
      renderItem={[Function]}
      scrollEnabled={false}
    />
  </View>
</View>
`;
