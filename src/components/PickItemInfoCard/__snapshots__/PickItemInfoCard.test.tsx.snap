// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests rendering PickItemInfoCard Renders the deleteView component and fires the Delete button 1`] = `
<View>
  <View
    style={
      [
        {
          "height": 45,
        },
        {
          "flex": 1,
          "width": 60,
        },
      ]
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#ec0439",
            "borderRadius": 5,
            "elevation": 1,
            "flex": 1,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Text
          style={
            {
              "color": "#ffffffff",
              "fontFamily": "Roboto-Medium",
              "fontSize": 16,
              "fontWeight": "normal",
              "textAlign": undefined,
            }
          }
        >
          [missing "en.GENERICS.DELETE" translation]
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Tests rendering PickItemInfoCard Renders the pickItemInfoCard 1`] = `
<View
  collapsable={false}
  forwardedRef={[Function]}
  handlerTag={1}
  handlerType="PanGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  style={
    {
      "overflow": "hidden",
    }
  }
>
  <View
    collapsable={false}
    style={
      {
        "bottom": 0,
        "flexDirection": "row-reverse",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <View>
      <View
        style={
          [
            {
              "height": 45,
            },
            {
              "flex": 1,
              "width": 60,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#ec0439",
                "borderRadius": 5,
                "elevation": 1,
                "flex": 1,
                "justifyContent": "center",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                {
                  "color": "#ffffffff",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 16,
                  "fontWeight": "normal",
                  "textAlign": undefined,
                }
              }
            >
              [missing "en.GENERICS.DELETE" translation]
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    forwardedRef={[Function]}
    handlerTag={2}
    handlerType="TapGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      {
        "transform": [
          {
            "translateX": -0,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "alignItems": "flex-start",
          "backgroundColor": "#ffffffff",
          "borderColor": "#dbecff",
          "borderWidth": 1,
          "flex": 1,
          "justifyContent": "space-between",
          "paddingBottom": 10,
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 7,
          }
        }
      >
        <Text
          style={
            {
              "flex": 1,
              "fontSize": 14,
            }
          }
        >
          Teapot
        </Text>
        <Text
          style={
            {
              "fontSize": 12,
            }
          }
        >
          [missing "en.ITEM.CATEGORY" translation]: 71
        </Text>
      </View>
      <View
        style={
          {
            "flexDirection": "row",
            "justifyContent": "space-evenly",
          }
        }
      >
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "space-between",
              "paddingHorizontal": 7,
            }
          }
        >
          <Text
            style={
              {
                "fontSize": 12,
              }
            }
          >
            [missing "en.ITEM.SALES_FLOOR_QTY" translation]: [missing "en.PICKING.FRONT" translation]
          </Text>
          <Text
            style={
              {
                "fontSize": 12,
              }
            }
          >
            [missing "en.PICKING.ASSIGNED" translation]: Associate 1
          </Text>
          <Text
            style={
              {
                "fontSize": 12,
              }
            }
          >
            [missing "en.PICKING.CREATED_BY" translation]: Associate 1
          </Text>
        </View>
        <View
          style={
            {
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "space-between",
              "paddingHorizontal": 7,
            }
          }
        >
          <Text
            style={
              {
                "fontSize": 12,
              }
            }
          >
            [missing "en.GENERICS.ITEM" translation]: 734
          </Text>
          <Text
            style={
              {
                "fontSize": 12,
              }
            }
          >
            [missing "en.ITEM.UPC" translation]: 000041800003
          </Text>
          <Text
            style={
              {
                "fontSize": 12,
              }
            }
          >
            [missing "en.PICKING.CREATED" translation]: 07:55 早上 02/04/2022
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
