// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests LocationListCard Component should tests redering LocationListCard with location list 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "borderBottomWidth": 1,
        "borderColor": "#616161",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View>
        <Icon
          color="#000000"
          name="map-marker-outline"
          size={25}
        />
      </View>
      <View>
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          [missing "en.LOCATION.FLOOR" translation] (1)
        </Text>
        <Text
          style={
            Object {
              "fontSize": 12,
            }
          }
        >
          [missing "en.AUDITS.VALIDATE_QUANTITY" translation]
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 15,
          "right": 15,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="add-location"
    >
      <Icon
        color="#0071e9"
        name="plus-thick"
        size={25}
      />
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "decrement": [Function],
          "increment": [Function],
          "locationName": "A1-1",
          "onDelete": [Function],
          "palletId": "4928",
          "qtyChange": [Function],
          "quantity": 22,
          "sectionId": 1502,
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    nestedScrollEnabled={true}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEnabled={false}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "marginBottom": 2,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffffff",
                "flexDirection": "row",
                "justifyContent": "space-evenly",
                "paddingHorizontal": 10,
                "paddingVertical": 8,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View>
                <Text
                  style={
                    Object {
                      "fontSize": 16,
                      "fontWeight": "bold",
                    }
                  }
                >
                  A1-1
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-evenly",
                }
              }
            >
              <View>
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 10,
                        "borderWidth": 1,
                        "flexDirection": "row",
                      },
                      Object {
                        "borderColor": "#e0e0e0",
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 15,
                          "width": 35,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": false,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#00000000",
                            "flex": 1,
                            "justifyContent": "center",
                            "opacity": 1,
                          }
                        }
                        testID="decreaseButton"
                      >
                        <Icon
                          color="#0071e9"
                          name="minus"
                          size={18}
                        />
                      </View>
                    </View>
                  </View>
                  <TextInput
                    keyboardType="numeric"
                    onChangeText={[Function]}
                    onEndEditing={[Function]}
                    style={
                      Object {
                        "color": "#0071e9",
                        "height": 40,
                        "minWidth": "15%",
                        "textAlign": "center",
                      }
                    }
                    testID="numericTextInput"
                    value="22"
                  />
                  <View
                    style={
                      Array [
                        Object {
                          "height": 15,
                          "width": 35,
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          Object {
                            "disabled": false,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#00000000",
                            "flex": 1,
                            "justifyContent": "center",
                            "opacity": 1,
                          }
                        }
                        testID="increaseButton"
                      >
                        <Icon
                          color="#0071e9"
                          name="plus"
                          size={18}
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View>
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Icon
                    color="#545F7A"
                    name="trash-can"
                    size={40}
                  />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Tests LocationListCard Component should tests rendering LocationListCard with error prop as true 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "paddingHorizontal": 15,
      "paddingVertical": 15,
    }
  }
>
  <Icon
    color="#e57373"
    name="alert"
    size={40}
  />
  <Text
    style={
      Object {
        "fontSize": 16,
        "textAlign": "center",
      }
    }
  >
    [missing "en.LOCATION.LOCATION_API_ERROR" translation]
  </Text>
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#e57373",
        "borderRadius": 4,
        "height": 40,
        "justifyContent": "center",
        "marginVertical": 10,
        "opacity": 1,
        "width": "95%",
      }
    }
    testID="retry-button"
  >
    <Text>
      [missing "en.GENERICS.RETRY" translation]
    </Text>
  </View>
</View>
`;

exports[`Tests LocationListCard Component should tests rendering LocationListCard with loader while fetching async API data 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffffff",
        "borderBottomWidth": 1,
        "borderColor": "#616161",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <View>
        <Icon
          color="#000000"
          name="map-marker-outline"
          size={25}
        />
      </View>
      <View>
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          [missing "en.LOCATION.FLOOR" translation] (0)
        </Text>
        <Text
          style={
            Object {
              "fontSize": 12,
            }
          }
        >
          [missing "en.AUDITS.VALIDATE_QUANTITY" translation]
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 10,
          "left": 15,
          "right": 15,
          "top": 10,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="add-location"
    >
      <Icon
        color="#0071e9"
        name="plus-thick"
        size={25}
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "padding": 30,
      }
    }
    testID="loader"
  >
    <ActivityIndicator
      size={30}
    />
  </View>
</View>
`;
