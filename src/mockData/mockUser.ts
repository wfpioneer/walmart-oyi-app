import User from '../models/User';
import { mockConfig } from './mockConfig';

const mockUser: User = {
  configs: mockConfig,
  countryCode: 'US',
  domain: 'Home Office',
  features: [],
  siteId: 6233,
  'bu-division': '',
  c: 'US',
  cn: '',
  co: '',
  codePage: '',
  company: '',
  ctscSecurityAnswers: '',
  department: '',
  departmentNumber: '',
  description: '',
  displayName: '',
  displayNamePrintable: '',
  distinguishedName: '',
  division: '',
  employeeID: '',
  employeeNumber: '',
  employeeType: '',
  extensionAttribute1: '',
  extensionAttribute2: '',
  extensionAttribute9: '',
  extensionAttribute10: '',
  extensionAttribute11: '',
  facsimileTelephoneNumber: '',
  givenName: '',
  initials: '',
  l: '',
  mail: '',
  manager: '',
  memberOf: [],
  name: '',
  postalCode: '',
  preferredLanguage: '',
  sAMAccountName: 'aFakeUserId',
  sn: '',
  st: '',
  streetAddress: '',
  sub: '',
  targetAddress: '',
  telephoneNumber: '',
  title: '',
  userPrincipalName: '',
  'wm-AccountStatus': '',
  'wm-AlignDistrict': '',
  'wm-AlignDivision': '',
  'wm-AlignRegion': '',
  'wm-AlignSubDivision': '',
  'wm-BusinessUnitCategory': '',
  'wm-BusinessUnitNumber': '',
  'wm-BusinessUnitSubType': '',
  'wm-BusinessUnitType': '',
  'wm-ChargeBusinessUnitNumber': '',
  'wm-ChargeCountryCode': '',
  'wm-ChargeDivisionNumber': '',
  'wm-ChargeState': '',
  'wm-DistrictNumber': '',
  'wm-EmployeeNumber': '',
  'wm-EmploymentStatus': '',
  'wm-FriendlyJobcodes': '',
  'wm-FullTimePartTimeCode': '',
  'wm-FullTimePartTimeEffDate': '',
  'wm-HireDate': '',
  'wm-IdentificationNumber': '',
  'wm-JobCode': '',
  'wm-JobCodeEffectiveDate': '',
  'wm-ManagerEffectiveDate': '',
  'wm-ManagerEpplID': '',
  'wm-PositionCode': '',
  'wm-RegionNumber': '',
  'wm-ReportToPositionCode': '',
  'wm-RespBaseDivNbr': '',
  'wm-RespCountrCode': '',
  'wm-RespLevelCode': '',
  'wm-RespLevelId': '',
  'wm-StoreMgrRespCode': '',
  'wm-SubDivisionId': '',
  'wm-SystemJobcodes': '',
  'wm-Type': '',
  'wm-WorkShift': '',
  'wm-division': '',
  userTokens: {
    accessToken: '',
    accessTokenExpirationDate: '',
    authorizationCode: '',
    authorizeAdditionalParameters: undefined,
    idToken: '',
    refreshToken: '',
    scopes: [],
    tokenAdditionalParameters: undefined,
    tokenType: ''
  },
  userId: ''
};

export default mockUser;
