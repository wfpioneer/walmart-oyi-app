// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home Navigator Click action to open camera 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="camerabtn"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "width": 55,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="camera"
      size={20}
    />
  </View>
</View>
`;

exports[`Home Navigator FeedbackScreen renders correctly 1`] = `
<View
  onLayout={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "display": "flex",
        "flexDirection": "column",
        "justifyContent": "space-between",
        "padding": 20,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
        }
      }
    >
      <Text>
        [missing "en.FEEDBACK.RATING_LABEL" translation]
      </Text>
      <View
        style={
          {
            "alignItems": "center",
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="star-icon-0"
          >
            <mockMaterialCommunityIcons
              color="#FFD966"
              name="star"
              size={30}
            />
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="star-icon-1"
          >
            <mockMaterialCommunityIcons
              color="#FFD966"
              name="star"
              size={30}
            />
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="star-icon-2"
          >
            <mockMaterialCommunityIcons
              color="#FFD966"
              name="star"
              size={30}
            />
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="star-icon-3"
          >
            <mockMaterialCommunityIcons
              color="#FFD966"
              name="star-outline"
              size={30}
            />
          </View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="star-icon-4"
          >
            <mockMaterialCommunityIcons
              color="#FFD966"
              name="star-outline"
              size={30}
            />
          </View>
        </View>
        <View>
          <Text>
            [missing "en.FEEDBACK.AVERAGE_RATE_LABEL" translation]
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        {
          "borderColor": "#c5c5c5",
          "borderWidth": 1,
          "marginVertical": 20,
        }
      }
    >
      <TextInput
        multiline={true}
        numberOfLines={10}
        onChangeText={[Function]}
        placeholder="[missing "en.FEEDBACK.COMMENT_PLACEHOLDER_LABEL" translation]"
        placeholderTextColor="#c5c5c5"
        style={
          {
            "textAlignVertical": "top",
          }
        }
        testID="Feedback Input"
        value=""
      />
    </View>
    <View
      style={
        {
          "paddingVertical": 20,
        }
      }
    >
      <View
        style={
          [
            {
              "height": 45,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "#0071e9",
                "borderRadius": 5,
                "elevation": 1,
                "flex": 1,
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID="Submit Feedback"
          >
            <Text
              style={
                {
                  "color": "#ffffffff",
                  "fontFamily": "Roboto-Medium",
                  "fontSize": 16,
                  "fontWeight": "normal",
                  "textAlign": undefined,
                }
              }
            >
              [missing "en.GENERICS.SUBMIT" translation]
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Home Navigator Render print queue button  1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="print-queue-button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "width": 55,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="printer"
      size={20}
    />
  </View>
</View>
`;

exports[`Home Navigator Renders the Home navigator component 1`] = `
<StackNavigator
  screenOptions={
    {
      "headerMode": "float",
      "headerStyle": {
        "backgroundColor": "#0071e9",
      },
      "headerTintColor": "#ffffffff",
    }
  }
>
  <Screen
    component={
      {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "type": [Function],
      }
    }
    listeners={
      {
        "blur": [Function],
      }
    }
    name="HomeScreen"
    options={[Function]}
  />
  <Screen
    component={[Function]}
    name="FeedbackScreen"
    options={[Function]}
  />
</StackNavigator>
`;

exports[`Home Navigator Renders the cameraButton header icon 1`] = `
<TouchableOpacity
  hostRef={null}
  onPress={[Function]}
  testID="camerabtn"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "width": 55,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="camera"
      size={20}
    />
  </View>
</TouchableOpacity>
`;

exports[`Home Navigator Renders the home header when isManualScanEnabled is false 1`] = `
<View
  style={
    {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <TouchableOpacity
    onPress={[Function]}
    testID="btnScan"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <mockMaterialCommunityIcons
        color="#ffffffff"
        name="barcode-scan"
        size={20}
      />
    </View>
  </TouchableOpacity>
  <TouchableOpacity
    onPress={[Function]}
    testID="print-queue-button"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "width": 55,
        }
      }
    >
      <mockMaterialCommunityIcons
        color="#ffffffff"
        name="printer"
        size={20}
      />
    </View>
  </TouchableOpacity>
  <TouchableOpacity
    onPress={[Function]}
    testID="btnShowMenu"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Image
        source=""
        style={
          {
            "height": 25,
            "marginRight": 10,
            "width": 10,
          }
        }
      />
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Home Navigator Renders the home header when isManualScanEnabled is true 1`] = `
<View
  style={
    {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <TouchableOpacity
    onPress={[Function]}
    testID="btnScan"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <mockMaterialCommunityIcons
        color="#ffffffff"
        name="barcode-scan"
        size={20}
      />
    </View>
  </TouchableOpacity>
  <TouchableOpacity
    onPress={[Function]}
    testID="print-queue-button"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "width": 55,
        }
      }
    >
      <mockMaterialCommunityIcons
        color="#ffffffff"
        name="printer"
        size={20}
      />
    </View>
  </TouchableOpacity>
  <TouchableOpacity
    onPress={[Function]}
    testID="btnShowMenu"
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Image
        source=""
        style={
          {
            "height": 25,
            "marginRight": 10,
            "width": 10,
          }
        }
      />
    </View>
  </TouchableOpacity>
</View>
`;

exports[`Home Navigator Renders the home menu button and onclick call track event 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="btnShowMenu"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Image
      source=""
      style={
        {
          "height": 25,
          "marginRight": 10,
          "width": 10,
        }
      }
    />
  </View>
</View>
`;

exports[`Home Navigator Renders the printQueueButton header icon 1`] = `
<TouchableOpacity
  hostRef={null}
  onPress={[Function]}
  testID="print-queue-button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "width": 55,
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="printer"
      size={20}
    />
  </View>
</TouchableOpacity>
`;

exports[`Home Navigator Renders the scanButton header icon when manual scan set to false 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="btnScan"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
  </View>
</View>
`;

exports[`Home Navigator Renders the scanButton header icon when manual scan set to true 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="btnScan"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <mockMaterialCommunityIcons
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
  </View>
</View>
`;
