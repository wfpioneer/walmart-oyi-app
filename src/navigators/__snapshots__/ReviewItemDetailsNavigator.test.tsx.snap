// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReviewItemDetailsNavigation Render ReviewItemNavigator 1`] = `
<StackNavigator
  screenOptions={
    {
      "headerMode": "float",
      "headerStyle": {
        "backgroundColor": "#0071e9",
      },
      "headerTintColor": "#ffffffff",
    }
  }
>
  <Screen
    component={[Function]}
    listeners={
      {
        "beforeRemove": [Function],
      }
    }
    name="ReviewItemDetailsHome"
    options={
      {
        "headerBackTitleVisible": false,
        "headerLeft": [Function],
        "headerRight": [Function],
        "headerTitle": [Function],
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="NoActionScan"
    options={
      {
        "headerBackTitleVisible": false,
        "headerRight": [Function],
        "headerTitle": "[missing "en.LOCATION.SCAN_ITEM" translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="LocationDetails"
    options={
      {
        "headerBackTitleVisible": false,
        "headerTitle": "[missing "en.LOCATION.TITLE" translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="EditLocation"
    options={
      {
        "headerBackTitleVisible": false,
        "headerRight": [Function],
        "headerTitle": "[missing "en.LOCATION.EDIT_LOCATION" translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="AddLocation"
    options={
      {
        "headerBackTitleVisible": false,
        "headerRight": [Function],
        "headerTitle": "[missing "en.LOCATION.ADD_NEW_LOCATION" translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="ItemHistory"
    options={
      {
        "headerBackTitleVisible": false,
        "headerLeft": [Function],
        "headerRight": [Function],
        "headerTitle": "[missing "en." translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="AuditItem"
    options={
      {
        "headerRight": [Function],
        "headerTitle": "[missing "en.AUDITS.AUDIT_ITEM" translation]",
      }
    }
  />
  <Screen
    component={[Function]}
    listeners={
      Object {
        "beforeRemove": [Function],
      }
    }
    name="ReserveAdjustment"
    options={
      {
        "headerBackTitleVisible": false,
        "headerRight": [Function],
        "headerTitle": "[missing "en.ITEM.RESERVE_ADJUSTMENT" translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
  <Screen
    component={[Function]}
    name="OtherAction"
    options={
      {
        "headerTitle": "[missing "en.ITEM.CHOOSE_ACTION" translation]",
        "headerTitleAlign": "left",
        "headerTitleStyle": {
          "fontSize": 18,
        },
      }
    }
  />
</StackNavigator>
`;

exports[`ReviewItemDetailsNavigation Render calcutator button  1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="calc-button"
>
  <View
    style={
      {
        "width": 35,
      }
    }
  >
    <Icon
      color="#ffffffff"
      name="calculator"
      size={20}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsNavigation Render open camera button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="open-camera"
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "width": 55,
      }
    }
  >
    <Icon
      color="#ffffffff"
      name="camera"
      size={20}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsNavigation Render print queue button  1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="print-queue-button"
>
  <View
    style={
      {
        "width": 35,
      }
    }
  >
    <Icon
      color="#ffffffff"
      name="printer"
      size={20}
    />
  </View>
</View>
`;

exports[`ReviewItemDetailsNavigation Renders and Calls the Manual Scan Button 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="barcode-scan"
>
  <View
    style={
      {
        "width": 35,
      }
    }
  >
    <Icon
      color="#ffffffff"
      name="barcode-scan"
      size={20}
    />
  </View>
</View>
`;
