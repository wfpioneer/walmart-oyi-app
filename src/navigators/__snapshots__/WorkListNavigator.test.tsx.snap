// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Worklist Navigator Renders the worklist Navigator 1`] = `
<SideMenu
  animationFunction={[Function]}
  animationStyle={[Function]}
  autoClosing={true}
  bounceBackOnOverdraw={true}
  disableGestures={false}
  edgeHitWidth={60}
  hiddenMenuOffset={0}
  isOpen={true}
  menu={
    <FilterMenu
      screenName="Item_Worklist"
    />
  }
  menuPosition="right"
  onAnimationComplete={[Function]}
  onChange={[Function]}
  onMove={[Function]}
  onSliding={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  openMenuOffset={500}
  toleranceX={10}
  toleranceY={10}
>
  <StackNavigator
    screenOptions={
      Object {
        "headerMode": "float",
        "headerStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "headerTintColor": "#ffffffff",
      }
    }
  >
    <Screen
      component={[Function]}
      name="ITEMWORKLIST"
      options={[Function]}
    />
  </StackNavigator>
</SideMenu>
`;

exports[`Worklist Navigator Renders the worklist Tabs 1`] = `
<Context.Provider
  value={
    Object {
      "getServerState": undefined,
      "store": Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <ForwardRef(NavigationContainerInner)>
    <WorklistTabs />
  </ForwardRef(NavigationContainerInner)>
</Context.Provider>
`;
