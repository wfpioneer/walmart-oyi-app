// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Location Tabs Renders Location Tabs with Mock Data 1`] = `
<React.Fragment>
  <LocationHeader
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    />
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    />
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Location Tabs with Mock Empty Data 1`] = `
<React.Fragment>
  <LocationHeader
    details="0 [missing \\"en.LOCATION.ITEMS\\" translation], 0 [missing \\"en.LOCATION.PALLETS\\" translation]"
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (0)",
        }
      }
    />
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (0)",
        }
      }
    />
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Location Tabs with Mock Large Location Data 1`] = `
<React.Fragment>
  <LocationHeader
    details="100 [missing \\"en.LOCATION.ITEMS\\" translation], 100 [missing \\"en.LOCATION.PALLETS\\" translation]"
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (100)",
        }
      }
    />
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (100)",
        }
      }
    />
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Location header as Scanned Event Value when location name is "-" 1`] = `
<React.Fragment>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    location="[missing \\"en.LOCATION.SECTION\\" translation] SCAN1-1"
  />
  <MaterialTopTabNavigator
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    />
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    />
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Manual Scan Component when isManualScanEnabled is set to true 1`] = `
<React.Fragment>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    />
    <Screen
      component={[Function]}
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    />
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders items Header 1`] = `
<React.Fragment>
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 2,
        "flexDirection": "row",
        "marginHorizontal": 0,
        "padding": 14,
      }
    }
  >
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 18,
        }
      }
    >
      [missing "en.LOCATION.ITEMS" translation]
    </Text>
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</React.Fragment>
`;

exports[`Test Location Tabs Renders pallet Header 1`] = `
<React.Fragment>
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 2,
        "flexDirection": "row",
        "marginHorizontal": 0,
        "padding": 14,
      }
    }
  >
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 18,
        }
      }
    >
      [missing "en.LOCATION.PALLETS" translation]
    </Text>
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</React.Fragment>
`;
