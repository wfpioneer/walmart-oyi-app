// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Location Tabs Renders Location Tabs with Mock Data 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <View
        style={
          Object {
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 5,
              "paddingHorizontal": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.LOCATION.REMOVE_SECTION_CONFIRMATION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <LocationHeader
    buttonPress={[Function]}
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Location Tabs with Mock Empty Data 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <View
        style={
          Object {
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 5,
              "paddingHorizontal": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.LOCATION.REMOVE_SECTION_CONFIRMATION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <LocationHeader
    buttonPress={[Function]}
    details="0 [missing \\"en.LOCATION.ITEMS\\" translation], 0 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (0)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (0)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Location Tabs with Mock Large Location Data 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <View
        style={
          Object {
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 5,
              "paddingHorizontal": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.LOCATION.REMOVE_SECTION_CONFIRMATION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <LocationHeader
    buttonPress={[Function]}
    details="100 [missing \\"en.LOCATION.ITEMS\\" translation], 100 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (100)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (100)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Location header as Scanned Event Value when location name is "-" 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <View
        style={
          Object {
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 5,
              "paddingHorizontal": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.LOCATION.REMOVE_SECTION_CONFIRMATION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    buttonPress={[Function]}
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] -"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Manual Scan Component when isManualScanEnabled is set to true 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <View
        style={
          Object {
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 5,
              "paddingHorizontal": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.LOCATION.REMOVE_SECTION_CONFIRMATION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    buttonPress={[Function]}
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] G - GroceryAisle 1-Section 1"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Renders Print Label button if "location printing" feature is enabled 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={false}
    modalType="Error"
    onClose={[Function]}
  >
    <React.Fragment>
      <View
        style={
          Object {
            "flexDirection": "column",
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "paddingBottom": 5,
              "paddingHorizontal": 15,
              "paddingTop": 15,
              "textAlign": "center",
            }
          }
        >
          [missing "en.LOCATION.REMOVE_SECTION_CONFIRMATION" translation]
        </Text>
      </View>
      <View
        style={
          Object {
            "alignContent": "space-around",
            "flexDirection": "row",
            "width": "100%",
          }
        }
      >
        <Button
          backgroundColor="#D6512D"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.CANCEL\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
        <Button
          backgroundColor="#0071e9"
          disabled={false}
          height={45}
          onPress={[Function]}
          radius={5}
          style={
            Object {
              "flex": 1,
              "paddingHorizontal": 10,
            }
          }
          title="[missing \\"en.GENERICS.OK\\" translation]"
          titleColor="#ffffffff"
          titleFontSize={16}
          titleFontWeight="normal"
          type={1}
          width={-1}
        />
      </View>
    </React.Fragment>
  </CustomModalComponent>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    buttonPress={[Function]}
    buttonText="[missing \\"en.LOCATION.PRINT_LABEL\\" translation]"
    details="2 [missing \\"en.LOCATION.ITEMS\\" translation], 3 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] -"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (2)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (3)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Tests rendering Tab Headers Renders items Header 1`] = `
<React.Fragment>
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 2,
        "flexDirection": "row",
        "marginHorizontal": 0,
        "padding": 14,
      }
    }
  >
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 18,
        }
      }
    >
      ITEMS
    </Text>
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</React.Fragment>
`;

exports[`Test Location Tabs Tests rendering Tab Headers Renders pallet Header 1`] = `
<React.Fragment>
  <View
    style={
      Object {
        "backgroundColor": "#ffffffff",
        "borderBottomColor": "#eeeeee",
        "borderBottomWidth": 2,
        "flexDirection": "row",
        "marginHorizontal": 0,
        "padding": 14,
      }
    }
  >
    <Text
      style={
        Object {
          "flex": 1,
          "fontSize": 18,
        }
      }
    >
      PALLETS
    </Text>
    <Button
      backgroundColor="#0071e9"
      disabled={false}
      height={28}
      onPress={[Function]}
      radius={5}
      title="[missing \\"en.GENERICS.ADD\\" translation]"
      titleColor="#0071e9"
      titleFontSize={12}
      titleFontWeight="bold"
      type={3}
      width={-1}
    />
  </View>
</React.Fragment>
`;

exports[`Test Location Tabs Tests rendering removeSectionModal Renders Loading Indicator for Remove Section Modal 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Error"
    onClose={[Function]}
  >
    <withTheme(ActivityIndicator)
      animating={true}
      color="#0071e9"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    />
  </CustomModalComponent>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    buttonPress={[Function]}
    details="0 [missing \\"en.LOCATION.ITEMS\\" translation], 0 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] -"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (0)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (0)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;

exports[`Test Location Tabs Tests rendering removeSectionModal Renders Retry button on Modal if remove section api returns an error 1`] = `
<React.Fragment>
  <CustomModalComponent
    animationType="none"
    isVisible={true}
    modalType="Error"
    onClose={[Function]}
  >
    <withTheme(ActivityIndicator)
      animating={true}
      color="#0071e9"
      hidesWhenStopped={true}
      size="large"
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    />
  </CustomModalComponent>
  <LocationManualScan
    keyboardType="default"
  />
  <LocationHeader
    buttonPress={[Function]}
    details="0 [missing \\"en.LOCATION.ITEMS\\" translation], 0 [missing \\"en.LOCATION.PALLETS\\" translation]"
    isDisabled={true}
    location="[missing \\"en.LOCATION.SECTION\\" translation] -"
  />
  <MaterialTopTabNavigator
    swipeEnabled={null}
    tabBarOptions={
      Object {
        "activeTintColor": "#0071e9",
        "inactiveTintColor": "#616161",
        "indicatorStyle": Object {
          "backgroundColor": "#0071e9",
        },
        "style": Object {
          "backgroundColor": "#ffffffff",
        },
      }
    }
  >
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="FloorDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.FLOORS\\" translation] (0)",
        }
      }
    >
      [Function]
    </Screen>
    <Screen
      listeners={
        Object {
          "tabPress": [Function],
        }
      }
      name="ReserveDetails"
      options={
        Object {
          "title": "[missing \\"en.LOCATION.RESERVES\\" translation] (0)",
        }
      }
    >
      [Function]
    </Screen>
  </MaterialTopTabNavigator>
</React.Fragment>
`;
