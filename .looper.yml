inherit: job:///Mobile/templates-android/androidTemplate-2.0.0

# Maximum commits to be ShallowCloned by Looper
gitShallowDepth: 2147483647

envs:
  global:
    variables:
      # Token generated using SVCintlsamstech service account
      GITHUB_API_TOKEN: 'ENC[QU2juSbwG+R7HO6mSGqUm/FcINIGG7lWFS3KHR7Lkss9/EYkXSuplj0nGZGtTw9/]'
      # Configure react-native-version to only target android
      RNV: android
      # App Center Prod Secret
      APPCENTER_SECRET_PROD: ENC[yAwiG+Mp5lQR3hPbCvhtYWN0RfIXDwE/N0ppOJl/dWU4d+uxXTtKJuZttxlOO6mJ]
      #Template required vars for CI/CD
      # true / false
      AIRWATCH_ACTIVATE: false
      # Cert / Prod
      AIRWATCH_ENV: Prod
      # whether the APK should be built or not
      BUILD_APP_FLAG: true
      # true / false
      DEPLOY_TO_AIRWATCH: false
      # email list where the notification will be sent
      EMAIL_NOTIFICATION: IntlSamsOYI@wal-mart.com

      CONCORD_API_KEY: ENC[OxuAmTCISPiG5JlhDEp5JDQr/CQY2ry7dsbKqBpA2JI=]
      # comma separated file that contains the sites information
      SITES_FILE: sites.txt
      # whether we should use the old version of BUILD_SUPPORT or not. Defaults to false.
      USE_OLD_BUILD_SUPPORT: false

      # determines whether the app should be signed using APK Signature Scheme v2. (Required on Android 11 and up)
      ANDROID_VERSION_ABOVE_11: false

      #Android build vars
      # Optional - if your app needs a special command to be built (release version). Defaults to assembleRelease.
      GRADLEW_BUILD_COMMAND: ':app:assembleProductionRelease'
      # Optional - if your app needs a special command to be built (debug version). Defaults to assembleDebug.
      GRADLEW_BUILD_PR_COMMAND: ':app:assembleProductionDebug'
      # Optional - if your app needs arguments to be built. It's empty by default.
      GRADLEW_ARG: ''

      #ServiceNow variables
      # whether you want the template to create a ServiceNow CHG or not. Defaults to true
      SN_CREATE_AUTO_CHANGE: true
      # The ServiceNow requested_by_group field. No default.
      SN_REQUESTED_BY_GROUP: "IntlSamsTech"
      # The ServiceNow requested_by_group field. Defaults to Change Managers - US
      SN_CHG_MANAGER_GROUP: "Change Managers - US Sam's"
      # risk level to apply in ServiceNow, from 1 (highest) to 5 (none). Defaults to 5
      SN_RISK: '4'
      # impact level to apply in ServiceNow, from 1 (highest) to 4 (none). Defaults to 4
      SN_IMPACT: '4'
      # Link to test plan documentation
      SN_TEST_PLAN: "Activate OYI International in Airwatch"
      # Optional description of the SN change
      SN_DESCRIPTION: "Deploy OYI to Sam's Pilot Club for UAT"

      #Defaultable vars
      # Optional - target Organization Group (OG) in AirWatch where the app will reside. Defaults to InternalStore.
      #      DEFAULT_BUSINESS_TYPE: '<BUSINESS_TYPE>'
      # Optional - if no countries are found in SITES_FILE, this will be used instead (single value). Defaults to "US"
      DEFAULT_COUNTRY_CODE: "CN"
      # Optional - version number to use instead of latest found in Proximity.
      #      DEFAULT_CURRENT_VERSION: ''
      # Optional - cocoapods version to use. Defaults to 1.8.4
      COCOAPODS_VERSION: '1.8.4'

      #Versioning vars
      # major / minor / patch / noBump > defaults to patch
      VERSION_TYPE: 'noBump'

      # Optional - weather the build will be zip aligned. Defaults to false
      ZIPALIGN_REQUIRED: false

      # Artifactory related vars
      DEFAULT_CURRENT_VERSION: "4.9.6"
      DEFAULT_VERSION_CODE: 276
      ALLOW_ARTIFACTORY: true
      GIT_ORG: "intlsamstech"
      TARGET_REPO: "releases"
      REPO_GROUP_ID: "IntlSamsTech"

      #Slack related vars
      # Optional - Slack channel for notifications
      SLACK_CHANNEL: 'intl_sams_oyi_ops_alerts'

      # Application Portfolio Management
      APM_ID: 'APM0007047'

      # CN Image Auth Client ID and Secret
      CN_IMAGE_AUTH_CLIENT_ID: ENC[c7gsJUW4bWJg2IHKIcxhhLmYVh6NQxbzVzN9D+zYC4R09VQzh5cdpTOdCdyEEZYo]
      CN_IMAGE_AUTH_SECRET: ENC[exyE4QqpRmHvnPE7bkcM28gdR8Vf+pn8RnRRmRwOMKZ+BmNOdJej/2RhNgtwAALxS63uoYmnfHHwFO+S6IFzCHT1VDOHlx2lM50J3IQRlig=]
      CN_ITEM_CENTER_TOKEN_SECRET: ENC[B4ccZDapcp+KUr3gr7+eFsX6chDKpfO1ucKsnE9Kyrl09VQzh5cdpTOdCdyEEZYo]

      projects:
        - rootDir: './android'
          type: android

  aos-variables:
    variables:
      PLATFORM: 'aos'
      APK_NAME: 'OYI-International'

tools:
  jdk:
    flavor: azul
    version: 11
  android:
    - tools
    - platform-tools
    - platforms;android-33
    - build-tools;33.0.0
    - extras;android;m2repository
    - ndk;23.1.7779620
  gradle: 7.5.1
  maven: 3.8.2
  nodejs: 16.20.0
  npm: 8.19.4
  sonarscanner: 4.8.0.2856

flows:
  gradlew-wrapper:
    - group("writing API secrets"):
      - 'echo "Building src/constant/Secrets.json using looper-encrypted secrets"'
      - 'echo "{ \"CN_ITEM_CENTER_TOKEN_SECRET\": \"$CN_ITEM_CENTER_TOKEN_SECRET\", \"CN_IMAGE_AUTH_CLIENT_ID\": \"$CN_IMAGE_AUTH_CLIENT_ID\", \"CN_IMAGE_AUTH_SECRET\": \"$CN_IMAGE_AUTH_SECRET\" }" >> ../src/constant/Secrets.json'
    - group("npm install"):
        - npm ci --legacy-peer-deps
        - TZ='America/Chicago' npm run test:coverage
    - group ("appcenter commands"):
        - 'echo "Building android/app/src/main/assets/appcenter-config.json using looper-encrypted secrets"'
        - 'echo "{  \"app_secret\": \"$APPCENTER_SECRET_PROD\" }" >> app/src/main/assets/appcenter-config.json'
    - group("gradle build"):
        - gradle clean
        - var (buildTask): "echo \"${task:-build}\""
        - var (buildArgs): "echo \"${args:--x lint}\""
        - call: "gradlew(task = ${buildTask}, args = ${buildArgs})"
  sonar:
    - group("Publish Sonar"):
        - echo "${GITHUB_PR_NUMBER}"
        - if: "${GITHUB_PR_NUMBER}"
          then:
            - call: sonar-fetch-remote-fix-ref
            - (name [sonar]) sonar-scanner
              -Dproject.settings=sonar-project.properties
              -Dsonar.pullrequest.github.repository=IntlSamsTech/oyi-app
              -Dsonar.pullrequest.key=${GITHUB_PR_NUMBER}
              -Dsonar.pullrequest.branch=${GITHUB_PR_SOURCE_BRANCH}
              -Dsonar.pullrequest.base=${GITHUB_PR_TARGET_BRANCH}
          else: (name [sonar]) sonar-scanner 
            -Dproject.settings=sonar-project.properties 
            -Dsonar.branch.name=${GITHUB_PR_SOURCE_BRANCH:-${GITHUB_BRANCH_NAME}}
        - hygieia.publishSonar
  sonar-fetch-remote-fix-ref:
    shell: |
      #!/bin/bash
      git fetch --no-tags --all
      if [[ ! -z "${GITHUB_PR_TARGET_BRANCH}" ]]
      then
        git fetch --no-tags origin ${GITHUB_PR_TARGET_BRANCH}:refs/remotes/origin/${GITHUB_PR_TARGET_BRANCH}
        git checkout -b remotes/origin/pr/${GITHUB_PR_NUMBER}
      fi
